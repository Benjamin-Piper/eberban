# eberban word list (en) - 0.46
---
# Support for raw digits :
0:
  family: "TI"
  gloss: "ti"
  tags: [number, digit]
  short: "Digit 0"
1:
  family: "TI"
  gloss: "te"
  tags: [number, digit]
  short: "Digit 1"
2:
  family: "TI"
  gloss: "ta"
  tags: [number, digit]
  short: "Digit 2"
3:
  family: "TI"
  gloss: "to"
  tags: [number, digit]
  short: "Digit 3"
4:
  family: "TI"
  gloss: "tu"
  tags: [number, digit]
  short: "Digit 4"
5:
  family: "ie"
  gloss: "tai"
  tags: [number, digit]
  short: "Digit 5"
6:
  family: "TI"
  gloss: "tia"
  tags: [number, digit]
  short: "Digit 6"
7:
  family: "TI"
  gloss: "tio"
  tags: [number, digit]
  short: "Digit 7"
8:
  family: "TI"
  gloss: "tiu"
  tags: [number, digit]
  short: "Digit 8"
9:
  family: "TI"
  gloss: "tei"
  tags: [number, digit]
  short: "Digit 9"

# Particles :
mi:
  family: "MI"
  short: "[E:tce* man] is I/me/a speaker/author."
  gloss: "me"
mo:
  family: "MI"
  short: "[E:tce* man] is you, a listener."
  gloss: "you"
mio:
  family: "MI"
  short: |
    Every member of [E:tco* man] is either I/a speaker/author; or you, a listener; and
    contains at least one of each.
  gloss: "inclusive we"
mie:
  family: "MI"
  short: |
    Every member of [E:tco* man] is either I/a speaker/author; or something that is not a listener;
    and contains at least one of each.
  gloss: "exclusive we"
ma:
  family: "MI"
  gloss: symbol
  short: "[E:ma] is a symbol."
  definition: ùúÜc ùúÜe is-symbol(e)
  notes: |
    Simplest non-predicate type. All more complex non-predicate types are
    symbols that must additionally satisfy some properties.

    There are an infinite amount of symbol which have no intrinsic meaning.
    Instead we can spawn some and declare that they are connected in some way
    using definitions.

    Can also be used alone for tautology (always true).
mai:
  family: "MI"
  gloss: "exists"
  short: "[E:a] exists."
  definition: ùúÜc ùúÜe ‚ä§
  notes:
    Binding the [E] place multiple time allows to express equality/equivalence.

    Can also be used alone for tautology (always true).
mae:
  family: "MI"
  gloss: "forall"
  short: "[E:(a)] is true for any argument (of the correct type)."
  definition: ùúÜc ùúÜE ‚àÄx E(c,x)
mao:
  family: "MI"
  gloss: "predicate-subset"
  short: "Every tuple of arguments that satisfy predicate [E:a] also satisfy [A:a]."
  definition: ùúÜc ùúÜE ùúÜA ‚àÄx ‚àÄy ... E(c,x,y,...) ‚áí A(c,x,y,...)
  notes: |
    [E] can be used to represent tuples or arguments that satisfy [A].
    This can be used to express indirect questions, with [A] being a predicate
    acting as a question and [E] representing the indirect
    question/answer to the question.
mui:
  family: "MI"
  gloss: "unknown"
  short: "True if [E:()] have an unknown truth value."
  definition: TODO
  notes: |
    All predicates return a trivalent truth value which is either true, false
    or undefined. 
mue:
  family: "MI"
  gloss: "context-extract"
  short: |
    True if property [E:(ma)] is true with the context provided as argument.
  definition: ùúÜc ùúÜE E(c,c)
  notes: |
    Exposes the context, an implicit/hidden argument to every predicate, as
    an explicit parameter. Allows to handle the context like any other argument.
mua:
  family: "MI"
  gloss: "context-apply"
  short: True if context [E:ma] makes [A:()] true.
  definition: ùúÜc ùúÜe ùúÜA A(e)
  transitive: true
  notes: |
    Evaluate a proposition with a provided context instead of the implicit
    forwarded context.
ba:
  family: "BA"
  short: "Inline argument marker."
  gloss: "[inline arg]"

ji:
  family: "JI"
  gloss: "cardinal"
  tags: [terminator, number, set]
  transitive: true
  short: |
    Cardinal number terminator. The preceding number have definition:\
    [E:tce* a] is (a group of) [number] things satisfying [A:(tca a)].\
    The number must be a natural number (non zero positive integer).
jie:
  family: "JI"
  gloss: "abstract number"
  tags: [terminator, number]
  transitive: true
  short: |
    Abstract number terminator. The preceding number have definition:\
    [E:tce gen] is the number [number] times [A:tce gen] (default: 1).
jia:
  family: "JI"
  gloss: "raw ardinal"
  tags: [terminator, number, set]
  transitive: true
  short: |
    Raw cardinal number terminator. The preceding number have definition:\
    [E:tce* a] is (a group of) [number] things satisfying [A:(a)].\
    The number must be a natural number (non zero positive integer).
jiu:
  family: "JI"
  gloss: "-th"
  tags: [terminator, number, list]
  transitive: true
  short: |
    Ordinal number terminator. The preceding number have definition:\
    [E:tca a] is the [number]th member of sequence [A:blu a].\
    The number must be a natural number (non zero positive integer).
ju:
  family: "JO"
  gloss: "base"
  tags: [number, separator]
  short: Base separator. Base is defined using the last allowed digit.
jo:
  family: "JO"
  gloss: "."
  tags: [number, separator]
  short: |
    Fractional part separator. Separate the integer part from the excess beyond
    the integer part.
joi:
  family: "JO"
  gloss: ". (negative)"
  tags: [number, separator]
  short: |
    Negative fractional part separator. Separate the integer part from the excess beyond
    the integer part, and indicates that the number is negative.
ja:
  family: "JA"
  gloss: "repeating"
  tags: [number, separator]
  short: |
    Repeating part separator. Inside a fractional part starts a string of
    digits that repeat infinitely.
je:
  family: "JE"
  gloss: "magnitude"
  tags: [number, separator]
  short: |
    Magnitude part separator. Number is multiplied by base^magnitude.
jei:
  family: "JE"
  gloss: "magnitude (negative)"
  tags: [number, separator]
  short: |
    Negative magnitude part separator. Number is multiplied by base^(-magnitude).
ti:
  family: "TI"
  short: "Digit 0"
  gloss: "0"
  tags: [digit, number]
te:
  family: "TI"
  short: "Digit 1"
  gloss: "1"
  tags: [digit, number]
ta:
  family: "TI"
  short: "Digit 2"
  gloss: "2"
  tags: [digit, number]
to:
  family: "TI"
  short: "Digit 3"
  gloss: "3"
  tags: [digit, number]
tu:
  family: "TI"
  short: "Digit 4"
  gloss: "4"
  tags: [digit, number]
tia:
  family: "TI"
  short: "Digit 5"
  gloss: "5"
  tags: [digit, number]
tie:
  family: "TI"
  short: "Digit 6"
  gloss: "6"
  tags: [digit, number]
tio:
  family: "TI"
  short: "Digit 7"
  gloss: "7"
  tags: [digit, number]
tiu:
  family: "TI"
  short: "Digit 8"
  gloss: "8"
  tags: [digit, number]
tei:
  family: "TI"
  short: "Digit 9"
  gloss: "9"
  tags: [digit, number]
tea:
  family: "TI"
  short: "Digit A"
  gloss: "A"
  tags: [digit, number]
teo:
  family: "TI"
  short: "Digit B"
  gloss: "B"
  tags: [digit, number]
teu:
  family: "TI"
  short: "Digit C"
  gloss: "C"
  tags: [digit, number]
tai:
  family: "TI"
  short: "Digit D"
  gloss: "D"
  tags: [digit, number]
tae:
  family: "TI"
  short: "Digit E"
  gloss: "E"
  tags: [digit, number]
tao:
  family: "TI"
  short: "Digit F"
  gloss: "F"
  tags: [digit, number]

ca:
  family: "CA"
  short: "Starts grammatically correct eberban quote. [E:tca skan] is text [quote]."
  gloss: ""
cai:
  family: "CAI"
  short: "Ends grammatically correct eberban quote."
  gloss: ""
  tags: [terminator]
ce:
  family: "CE"
  short: "Quote next word. [E:tca skan] is word [word]."
  gloss: "[word]"
cei:
  family: "CE"
  short: "[E:tca man] is the family of word [word]."
  gloss: "[family]"
  nodes: |
    TODO: Add predicates to manipulate language concepts.
co:
  family: "CO"
  short: "[E:tca skan] is a quote of an arbitrary string of space separated \"words\"."
  gloss: ""
cu:
  family: "CU"
  short: |
    Erase the currently sentence/defintion.
    Used when a mistake is made to redo the sentence/definition."
  gloss: "[erased]"

vai:
  family: "VI"
  gloss: "&["
  short: "State the following 0-ary VI-scope, unrelated to any place."
  notes: |
    Allow to quickly state multiple multiple propositions without having to rely
    on connective predicates. In fact, connective predicates are defined using
    {vai}/{fai}.
vi:
  family: "VI"
  gloss: "last["
  short: "The last place of the suffixed predicate is shared with the following VI-scope."
  notes: |
    The following VI-scope is a property over the variable used in the suffixed
    predicate last place.
ve:
  family: "VI"
  gloss: "E["
  short: "The E place of the suffixed predicate is shared with the following VI-scope."
  notes: |
    The following VI-scope is a property over the variable used in the suffixed
    predicate E place.
va:
  family: "VI"
  gloss: "A["
  short: "The A place of the suffixed predicate is shared with the following VI-scope."
  notes: |
    The following VI-scope is a property over the variable used in the suffixed
    predicate A place.
vo:
  family: "VI"
  gloss: "O["
  short: "The O place of the suffixed predicate is shared with the following VI-scope."
  notes: |
    The following VI-scope is a property over the variable used in the suffixed
    predicate O place.
vu:
  family: "VI"
  gloss: "U["
  short: "The U place of the suffixed predicate is shared with the following VI-scope."
  notes: |
    The following VI-scope is a property over the variable used in the suffixed
    predicate U place.
vie:
  family: "VI"
  gloss: "E=["
  short: "The E place of the suffixed predicate is equivalent to the following VI-scope."
  notes: |
    The following VI-scope have the same type as the E place and is equivalent.
    Non-sensical if not a predicate place.
via:
  family: "VI"
  gloss: "A=["
  short: "The A place of the suffixed predicate is equivalent to the following VI-scope."
  notes: |
    The following VI-scope have the same type as the A place and is equivalent.
    Non-sensical if not a predicate place.
vio:
  family: "VI"
  gloss: "O=["
  short: "The O place of the suffixed predicate is equivalent to the following VI-scope."
  notes: |
    The following VI-scope have the same type as the O place and is equivalent.
    Non-sensical if not a predicate place.
viu:
  family: "VI"
  gloss: "I=["
  short: "The U place of the suffixed predicate is equivalent to the following VI-scope."
  notes: |
    The following VI-scope have the same type as the U place and is equivalent.
    Non-sensical if not a predicate place.
vei:
  family: "VEI"
  gloss: "]"
  short: "Close the current VI-scope."
  tags: [terminator, elidable]

fi:
  family: "FI"
  gloss: "]last["
  short: "The last place of the suffixed predicate is shared with the following VI-scope."
  notes: |
    The following VI-scope is a property over the variable used in the suffixed
    predicate last place.
fe:
  family: "FI"
  gloss: "]E["
  short: |
    The E place of the predicate suffixed with latest non-closed VE is shared
    with the following VI-scope.
  notes: |
    The following VI-scope is a property over the variable used in the suffixed
    predicate E place.
fa:
  family: "FI"
  gloss: "]A["
  short: |
    The A place of the predicate suffixed with latest non-closed VE is shared
    with the following VI-scope.
  notes: |
    The following VI-scope is a property over the variable used in the suffixed
    predicate A place.
fo:
  family: "FI"
  gloss: "]O["
  short: |
    The O place of the predicate suffixed with latest non-closed VE is shared
    with the following VI-scope.
  notes: |
    The following VI-scope is a property over the variable used in the suffixed
    predicate O place.
fu:
  family: "FI"
  gloss: "]U["
  short: |
    The U place of the predicate suffixed with latest non-closed VE is shared
    with the following VI-scope.
  notes: |
    The following VI-scope is a property over the variable used in the suffixed
    predicate O place.
fie:
  family: "FI"
  gloss: "]E=["
  short: |
    The E place of the predicate suffixed with latest non-closed VE is equivalent
    to the following VI-scope.
  notes: |
    The following VI-scope have the same type as the E place and is equivalent.
    Non-sensical if not a predicate place.
fia:
  family: "FI"
  gloss: "]A=["
  short: |
    The A place of the predicate suffixed with latest non-closed VE is equivalent
    to the following VI-scope.
  notes: |
    The following VI-scope have the same type as the A place and is equivalent.
    Non-sensical if not a predicate place.
fio:
  family: "FI"
  gloss: "]O=["
  short: |
    The O place of the predicate suffixed with latest non-closed VE is equivalent
    to the following VI-scope.
  notes: |
    The following VI-scope have the same type as the O place and is equivalent.
    Non-sensical if not a predicate place.
fiu:
  family: "FI"
  gloss: "]U=["
  short: |
    The U place of the predicate suffixed with latest non-closed VE is equivalent
    to the following VI-scope.
  notes: |
    The following VI-scope have the same type as the U place and is equivalent.
    Non-sensical if not a predicate place.
fai:
  family: "FI"
  gloss: "]&["
  short: "State the following 0-ary VI-scope, unrelated to any place."
  notes: |
    Allow to quickly state multiple multiple propositions without having to rely
    on connective predicates. In fact, connective predicates are defined using
    {vai}/{fai}.
se:
  family: "SI"
  short: "Bind E place and disable switching."
  gloss: "<EE>"
sa:
  family: "SI"
  short: Bind A place and disable switching.
  gloss: "<AA>"
so:
  family: "SI"
  short: "Bind O place and disable switching."
  gloss: "<OO>"
su:
  family: "SI"
  short: "Bind U place and disable switching."
  gloss: "<II>"
sea:
  family: "SI"
  short: "Bind E place then switch to the A place."
  gloss: "<EA>"
seo:
  family: "SI"
  short: "Bind E place then switch to the O place."
  gloss: "<EO>"
seu:
  family: "SI"
  short: "Bind E place then switch to the U place."
  gloss: "<EU>"
sae:
  family: "SI"
  short: "Bind A place then switch to the E place."
  gloss: "<AE>"
sao:
  family: "SI"
  short: "Bind A place then switch to the O place."
  gloss: "<AO>"
sau:
  family: "SI"
  short: "Bind A place then switch to the U place."
  gloss: "<AU>"
soe:
  family: "SI"
  short: "Bind O place then switch to the E place."
  gloss: "<OE>"
soa:
  family: "SI"
  short: "Bind O place then switch to the A place."
  gloss: "<OA>"
sou:
  family: "SI"
  short: "Bind O place then switch to the U place."
  gloss: "<OU>"
sue:
  family: "SI"
  short: "Bind U place then switch to the E place."
  gloss: "<UE>"
sua:
  family: "SI"
  short: "Bind U place then switch to the A place."
  gloss: "<UA>"
suo:
  family: "SI"
  short: "Bind U place then switch to the O place."
  gloss: "<UO>"
za:
  family: "ZI"
  short: "[E:tce a] is named after the E place of the following predicate."
  gloss: "[named]"
  notes: |
    Another place can be selected by adding a SE particle between {za} and the
    predicate.
zai:
  family: "ZI"
  short: "[E:ma] is the symbol representing the E place of the following predicate."
  gloss: "[literal]"
  note: |
    Another place can be selected by adding a SE particle between {zai} and the
    predicate. Using {zai} before a specific predicate will always yield the
    same unique symbol.

    It is mainly used to create identifiers used as map keys (see {kce}).
ze:
  family: "ZI"
  short: "Use the latest instance and variables of the predicate word instead of creating new ones."
  gloss: "[reuse]"
zei:
  family: "ZI"
  short: |
    Use the latest instance and variables of a compound containing this word
    instead of creating new ones.
  gloss: "[reuse compound]"
zi:
  family: "ZI"
  short: |
    Narrow-scope negation : negates the predicate unit but not the existential variables it creates.
    There exist e, a,... such that unit(e, a, ...) is false.
  gloss: "non-"
  tags: [negation]
zoie:
  family: "ZI"
  short: |
    Satisfy the default bound of the E place of [predicate] (set with {poie}).
  gloss: "[default-E]"
  tags: [default]
zoia:
  family: "ZI"
  short: |
    Satisfy the default bound of the A place of [predicate] (set with {poia}).
  gloss: "[default-A]"
  tags: [default]
zoio:
  family: "ZI"
  short: |
    Satisfy the default bound of the O place of [predicate] (set with {poio}).
  gloss: "[default-O]"
  tags: [default]
zoiu:
  family: "ZI"
  short: |
    Satisfy the default bound of the U place of [predicate] (set with {poiu}).
  gloss: "[default-U]"
  tags: [default]
# zo:
#   family: "ZI"
#   short: "[E:ma] is something referred to by [predicate-E]."
#   gloss: "[deref]"
#   notes: |
#     TODO: Old import of lojban "la'e". Is it still relevant in eberban?
# zoi:
#   family: "ZI"
#   short: "[E:ma] is a reference/symbol refering to [predicate]."
#   gloss: "[ref]"
#   notes: |
#     TODO: Old import of lojban "lu'e". Is it still relevant in eberban?
zu:
  family: "ZI"
  short: |
    Transform an [A:()] place into an [A:(a)] place, which is provided the
    content of the [E:a] place.  
    The resulting predicate is transitive.

    While a SE before {zu} can still override the chaining behavior, a SE after
    {zu} allow to select which places to use for the transformation.

    For 2-vowels SE variants "sXY", X select the entity place, while Y select
    the proposition place. Not using a SE thus is equivalent to an implicit
    {sea}.

    For 1-vowel SE variants "sY", it is equivalent to "SeY". Since it doesn't
    make sense to use the same places for both sides, {se} is nonsensical.

    The selected proposition place will be the one being transitioned to in
    chaining (unless overwritten by a SE placed before {zu}).
  gloss: "[() to (a)]"
poie:
  family: "PO"
  short: |
    Set the default constraint for the E place of the following predicate word.
  gloss: "[set E default]"
  tags: [default]
poia:
  family: "PO"
  short: |
    Set the default constraint for the A place of the following predicate word.
  gloss: "[set A default]"
  tags: [default]
poio:
  family: "PO"
  short: |
    Set the default constraint for the O place of the following predicate word.
  gloss: "[set O default]"
  tags: [default]
poiu:
  family: "PO"
  short: |
    Set the default constraint for the U place of the following predicate word.
  gloss: "[set U default]"
  tags: [default]
pa:
  family: "PA"
  short: "Starts an assertive sentence, that the speaker asserts is true."
  gloss: "[assert]"
pahi:
  family: "PA"
  short: |
    Registers a sentence wrapper, such that any sentence [E:()] expressed with
    {pa} is wrapped by this registered predicate.
  gloss: "[sentence wrapper]"
# pai:
#   family: "PA"
#   short: "Starts a declarative sentence, that is true only because uttered (used for declarations, announcements, etc)."
#   gloss: "[declaration]"
pae:
  family: "PA"
  short: |
    Starts a context switching sentence, such that [E:ma] will be the context
    provided to any following sentences.
  gloss: "[context change]"
pahe:
  family: "PA"
  short: |
    Registers a context-switching sentence, that will be applied automatically
    between each sentences as if it was used with {pae}.
  gloss: "[register context change]"
  notes: |
    By default I is responsible to update the "present" and the "current sentence"
    symbol in the context.
# pau:
#   family: "PA"
#   short: "Starts a directive sentence, that is requested, wished or ordered to be true."
#   gloss: "[directive]"
pahu:
  family: "PA"
  short: |
    Import another text represented by the [E:tce* skan] place of this scope.
    Imports allows to make texts defining non-standard vocabulary about a subject,
    so that it can be used anytime someone wants to talk about this subject.
    Such subjects are advanced physics, chemistry or maths for example.
  gloss: "[import]"
  notes: "TODO: Define how the represented text is resolved."
pe:
  family: "PE"
  short: "Inline scope starter."
  gloss: "["
pei:
  family: "PEI"
  short: "Inline scope elidible terminator."
  gloss: "]"
  tags: [terminator, elidable]
pu:
  family: "PU"
  short: "Enable axiomatic predicate."
  gloss: "[axiom on]"
pui:
  family: "PU"
  short: "Disable axiomatic predicate."
  gloss: "[axiom off]"
po:
  family: "PO"
  short: "Start a predicate definition."
  gloss: "[definition]"
poi:
  family: "PO"
  short: "Start a question definition, the arguments being the unknown informations."
  gloss: "[question]"
poe:
  family: "PO"
  short: "Start a predicate definition which captures the current context."
  gloss: "[capturing definition]"
di:
  family: "DI"
  short: |
    Attention focus: the listener should be extra attentive to the following word.
    Maybe it would be especially prone to confusion?
  gloss: "[attention focus]"
die:
  family: "DI"
  short: |
    Contrastive focus: It's that thing and not something else that was expected.
  gloss: "[contrastive focus]"
dia:
  family: "DI"
  short: |
    Newsworthiness focus: Marks the part of the sentence containing the most
    important new information.
  gloss: "[newsworthiness focus]"
de:
  family: "DE"
  gloss: ""
  short: "Attach a single predicate that acts as an interjection."
dei:
  family: "DE"
  short: "Attached word is a metadata tag / hashtag."
  gloss: "[metadata]"
da:
  family: "DA"
  gloss: "("
  short: "Starts parenthetical note."
dai:
  family: "DAI"
  gloss: ")"
  tags: [terminator]
  short: "Ends parenthetical note."
du:
  family: "DU"
  short: "Marks a new paragraph/section/change of subject."
  gloss: "[paragraph]"
bu:
  family: "BU"
  gloss: "[sequence]"
  short: "Sequence separator."
buhu:
  family: "BU"
  gloss: "[erased]"
  short: "Erase the current sequence item."
be:
  family: "BE"
  gloss: ""
  tags: [terminator, elidable]
  short: Borrowing and arguments list terminator.
bi:
  family: "BI"
  gloss: "not"
  tags: [negation]
  short: "Wide scope negation ranging over existential variables and predicates."
bo:
  family: "BO"
  gloss: "new var"
  short: "Create a new variable and discard previous value if any."

## Derived roots:
vari:
  family: "R"
  gloss: "and"
  short: True if both [E:()] and [A:()] are true.
  definition: |
    po vari ge ga be
    ge vai ga

vare:
  family: "R"
  gloss: "or"
  short: True if [E:()] or [A:()] (or both) is true.
  definition: |
    po vare ge ga be
    bi ma vai bi ge fai bi ga

kidvo:
  family: "R"
  gloss: "transitive relation"
  short: "[E:a] and [A:a] satisfy relation [O:(a,a)] transitively."
  definition: |
    po kidvo ke ka go be
    vare via ke go ka vei
    bo ki vai ke go ki
    fai ki kidvo vio go vei ka
    
varu:
  family: "R"
  gloss: "if-then-else"
  short: |
    If [E:()] is then [A:()] (default: true) is true, otherwise [O:()]
    (default: true) is true.
  definition: |
    po varu ge ga be
    vare
      va vari
        ve ge
        fa ga
        vei
      fe vari
        ve bi ge
        fa go
    poia varu mai
    poio varu mai

zoni:
  family: "R"
  gloss: "the only"
  short: Among the things that satisfy [E:(a)] only [O:a] satisfy [A:(a)].
  definition: |
    po zoni ge ga ko be
    ma vai ko ge
    fai ko ga
    fai mae ve ki be
    varu ve ma
    [vai bi ki ko
    fai ki go vei]
    fa bi ki ga

tci:
  family: "R"
  gloss: set member
  tags: [struct, set]
  short: "[E:tca a] is a member of set [A:tcu a]."
  definition: |
    po tci ke ka be
    ke tca tcie ka

tcie:
  family: "R"
  gloss: set-raw member
  tags: [struct, set]
  short: "[E:a] is a member of set [A:tcui a]."
  definition: See {tcui}

tcia:
  family: "R"
  gloss: subset
  tags: [struct, set]
  short: "[E:tcui a] is a subset of [A:tcui a]."
  notes: Every set is its own subset.
  definition: |
    po tcia ke ka be
    mae ve ki be
    varu vie ki tcie ke
    fie ki tcie ka

tce:
  family: "R"
  gloss: set-1+
  tags: [struct, set]
  short: "[E:tcei a] is a (non-empty) set of some things that individualy satisfy [A:(tca a)]."
  notes: |
    Each member is provided to [A] wrapped in a singleton set to make any predicate
    having set places usable directly.

    See {tcei} for the unwrapped variant, which is mainly required to deal with
    nested sets. 

    When {tce} is used in places annotations, it is usually used either
    distributively or collectively. Distributively means that if the predicate
    is true then it is true for any subset of such distributive place, which is
    not necessarily the case with collective behavior. As this distinction
    is important for the meaning of such predicates, distributive are marked
    as {tce}*.
  definition: |
    po tce ke gia be
    ke tcei via be ba tcie tca gia
tcei:
  family: "R"
  gloss: set-raw-1+
  tags: [struct, set]
  short: "[E:tcui a] is a (non-empty) set of some things that individualy satisfy [A:(a)]."
  notes: |
    Each member is provided to [A] without being wrapped in a singleton set.

    See {tce} for the wrapped variant, which is recommended unless you're handling
    nested sets.
  definition: |
    po tcie ke gia be
    ke tcia tcui gia

tca:
  family: "R"
  gloss: set-1
  tags: [struct, set]
  short: "[E:tcai a] is a set containing exactly one member, and satisfy [A:(tcai a)]."
  definition: |
    po tca ke gia be
    ke se tcai gia
tcai:
  family: "R"
  gloss: set-raw-1
  tags: [struct, set]
  short: "[E:tcui a] is a set containing exactly one member which satisfy [A:(a)]."
  definition: |
    po tcia ke gia be
    ma vai ke tcei gia
    fai bi ma
    vai bo ka tcie ke
    fai bo ko bi ka
    fai ko tcie ke
tco:
  family: "R"
  gloss: set-2+
  tags: [struct, set]
  short: "[E:tcoi a] is a set of at least 2 things that individualy satisfy [A:(tcai a)]."
  notes: |
    Each member is provided to [A] wrapped in a singleton set to make any predicate
    having set places usable directly.

    See {tcoi} for the unwrapped variant, which is mainly required to deal with
    nested sets.

    This 2+ members predicate is useful in cases where dealing with singletons is
    nonsensical, such as when talking about mutuality.
  definition: |
    po tco ke gia be
    ke tcoi via be ba tcie tca gia
tcoi:
  family: "R"
  gloss: set-raw-2+
  tags: [struct, set]
  short: "[E:tcui a] is a set of at least 2 things that individualy satisfy [A:(a)]."
  notes: |
    Each member is provided to [A] without being wrapped in a singleton set.

    See {tco} for the wrapped variant, which is recommended unless you're handling
    nested sets.
  definition: |
    po tcia ke gia be
    ma vai ke tcei gia
    fai bo ka tcie ke
    fai bo ko bi ka
    fai ko tcie ke

tcu:
  family: "R"
  gloss: set-all
  tags: [struct, set]
  short: "[E:tcui a] is the (non-empty) set of all things that individualy satisfy [A:(tca a)]."
  notes: |
    Each member is provided to [A] wrapped in a singleton set to make any predicate
    having set places usable directly.

    See {tcui} for the unwrapped variant, which is mainly required to deal with
    nested sets.
  definition: |
    po tcu ke gia be
    ke tcui via be ba tcie tca gia
tcui:
  family: "R"
  gloss: set-raw-all
  tags: [struct, set]
  short: "[E:ma] is the (non-empty) set of all things that individualy satisfy [A:(a)]."
  notes: |
    Each member is provided to [A] without being wrapped in a singleton set.

    See {tcu} for the wrapped variant, which is recommended unless you're handling
    nested sets.
  definition: |
    po e tcui pi be
    ma vai bo tcui
    fai bo tcie
    fai mae ve gi be
    varu vie gi mai
    fai mae ve ki be
    varu vie ki ma
    fie ki mua
    ma vai bo ke tcui gi
    fai mae ve ka be
    mai vie ka tcie ke
    fie ka gi
    pi e tcui pi

dji:
   family: "R"
   gloss: set-union
   tags: [struct, set, operator]
   short: "[E:tce a] is the union of sets [A:tce a] and [O:tce a]."
   definition: |
      po dji ke ka ko be
      ke tcu
        va ki be vare
          ve ki tci ka
          fa ki tci ko
dje:
   family: "R"
   gloss: set-intersection
   tags: [struct, set, operator]
   short: "[E:tce a] is the intersection of sets [A:tce a] and [O:tce a]."
   definition: |
      po dje ke ka ko be
      ke tcu
        va ki be vari
          ve ki tci ka
          fa ki tci ko
dja:
   family: "R"
   gloss: set-diff
   tags: [struct, set, operator]
   short: "[E:tce a] is the difference between sets [A:tce a] and [O:tce a]."
   definition: |
      po dja ke ka ko be
      ke tcu
        va ki be vari
          ve ki tci ka
          fa bi ki tci ko

djo:
   family: "R"
   gloss: largest-set
   tags: [struct, set, operator]
   short: "[E:tce a] is the largest unique set that satisfy [A:(tce a)]."
   definition: |
      po djo ke gia be
      ma
        vai ke gia
        fai bi bo ka
          vai ka bi ke
          fai ka gia
          fai ke tcia ka

dju:
   family: "R"
   gloss: smallest-set
   tags: [struct, set, operator]
   short: "[E:tce a] is the smallest unique set that satisfy [A:(tce a)]."
   definition: |
      po dju ke gia be
      ma
        vai ke gia
        fai bi bo ka
          vai ka bi ke
          fai ka gia
          fai ka tcia ke

man:
  family: "R"
  gloss: symbol set
  short: "[E:tcei* ma] is a symbol."

kcin:
  family: R
  tags: [struct, map]
  gloss: map
  short: "[E:ma] is a map."
kcir:
  family: R
  tags: [struct, map]
  gloss: empty-map
  short: "[E:ma] is an empty map."

kce: 
  family: R
  tags: [struct, map]
  gloss: map-entry
  short: "[E:a] is a the value in map [A:kcin] for key [O:ma]."
kca:
  family: "R"
  gloss: map-transform
  tags: [struct, map]
  short: |
    [E:kcin] represents a map that can be optained by applying the list of
    transformations [O:blu ()] to map [A:kcin].
  notes: |
    Each proposition of [O] will be evaluated with a context optained from the
    current context with keys [@zai ekcate:kci] and [@zai ekcata:kci]
    replaced like so:
    - In the first proposition [@zai ekcate](x) is true only if x = [E].
    - For all other propositions [@zai ekcate] is equal to the previous
      proposition [@zai ekcata].
    - In the last proposition [@zai ekcata](x) is true only if x = [A].

    Predicates {kcan}, {kco} and {kcu} interact with [@zai ekcate] and
    [@zai ekcata] to provide ergonomic transformations.

kcan:
  family: "R"
  gloss: map-transform-delete
  tags: [struct, map]
  short: |
    Map transformation: [@zai ekcata: kci a] can be obtained by removing entry
    with key [E:ma] from [@zai ekcate: kci a] (if any). If there is no such entry
    then they are equal.
  notes: |
    See {kca} for usage.
kco:
  family: "R"
  gloss: map-transform-insert
  tags: [struct, map]
  short: |
    Map transformation: [@zai ekcata: kci a] can obtained by inserting entry
    [E:ma] with value [A:a] in [@zai ekcate: kci a] (discarding any previous
    value with that key if any).
  notes: |
    See {kca} for usage.
kcu:
  family: "R"
  gloss: map-transform-map
  tags: [struct, map]
  short: |
    Map transformation: [@zai ekcata: kci a] is obtained by inserting entry
    [E:ma] with its value satisfy relation [A:(a,a)] with the value for this
    same entry in [@zai ekcate: kci a]. [@zai ekcate] must have an entry [E:ma].
  notes: |
    See {kca} for usage.

blun:
  family: "R"
  gloss: list
  tags: [struct, list]
  short: "[E:ma] is a list"
  definition: |
    po blun ke be
    vare
      vie ke zai blun
      fia ke seo kin blun

blu:
  family: "R"
  gloss: list
  tags: [struct, list]
  short: "[E:blun] is a list of things all satisfying [A:(a)]."
  definition: |
    po blu ke gi be
    vare
      vie ke zai blun
      fia ma
        vai ke sea kin gi
        fai ke seo kin blu gi

bla:
  family: "R"
  gloss: lfold
  tags: [struct, list]
  short: |
    Left folds list [E:blu a] with initial [A:b] and final [O:b]
    carries by applying predicate [U:(b,b,a)] in first to last order.
  definition: |
    po bla ke ka ko gu be
    vare
      vie ke zai blun
        vai ka ko vei
      fie ke zi zai blun
        vai ma
          vai bo ki
          fai ka gu va ki fo sae kin ke vei
          fai bla
            ve soe kin ke
            fa ki
            fo ko
            fu gu

blai:
  family: "R"
  gloss: rfold
  tags: [struct, list]
  short: |
    Right folds list [E:blu a] with initial [A:b] and final [O:b]
    carries by applying predicate [U:(b,b,a)] in last to first order.
  definition: |
    po blai ke ka ko gu be
    vare
      vie ke zai blun
        vai ka ko vei
      fie ke zi zai blun
        vai ma
          vai bo ki
          fai ki gu va ko fo sae kin ke vei
          fai blai
            ve soe kin ke
            fa ka
            fo ki
            fu gu

ble:
  family: "R"
  gloss: concat
  tags: [struct, list]
  short: |
    [E:blu a] is the concatenation of lists [A:blu a] and [O:blu a].
  definition: |
    po ble ke ka ko be
    so blai
      ve ka
      fa ko
      fiu kie kia kio be
        kia kin
          ve kio
          fa kie

bli:
  family: "R"
  gloss: set-from-list
  tags: [struct, list, set]
  short: |
    [E:tce a] is the set containing only all the elements in list [A:blu a].
  definition: |
    po ga ke ka be
    ka bla
      va ke
      fiu kie kia kio be
        kio tcie kie
    
    po bli ke ka be
    ma vai ke ga ka
      fai bi ma 
        ve bi ke ga ka
        fe tcia ke

gin:
  family: "R"
  gloss: number-natural
  tags: [math, number]
  short: "[E:tce* man] is a natural number."
  # definition: |
  #   pai mai
  #     ve pi bo igin
  #     fe pi bo igini
  #     fe pi bo ki ma igin
  #     fe pi mae
  #       ve ke pi varu
  #         ve ke igin
  #         fa zoni
  #           ve igin
  #           fa igini ke
  #         vei
  #       vei
  #     fe pi mae
  #       ve ke pi varu
  #         ve ke igin bi ki
  #         fa zoni
  #           ve igin
  #           fa sae igini ke
  #         vei
  #       vei
  #     fe pi mae
  #       ve ke pi varu
  #         ve ke igin bi ki
  #         fa ki kidvo
  #           va ke
  #           fo igini
  #           vei
  #         vei
  #       vei
  #     fe pi bi igin sae igini ki

  #   po gin igin
  #   po gini igini
  #   po ginin ki

gini:
  family: "R"
  gloss: succ
  tags: [partial, math, number]
  short: "[E:tca ma] is the successor of [A:tca ma]."
ginin:
  family: "R"
  gloss: zero
  tags: [math, number]
  short: "[E:tca gin] is zero."

gen:
  family: "R"
  gloss: number-real
  tags: [math, number]
  short: "[E:tce* man] is a real number."

skan:
  family: "R"
  gloss: string
  tags: [struct, string]
  short: "[E:tce* man] is a string of data."
  notes: |
    TODO: Improve definition and add oither predicates to interact with it.

    It's goal is to be able to manipulate both native and foreign quotes (which
    can be speakable, embeded file, etc).

cna:
  family: "R"
  gloss: "AND-S"
  tags: [sequence, connective]
  short: "This proposition is true if all symbols in sequence [E:blu ma] satisfies property [A:(ma)]."
cne:
  family: "R"
  gloss: "OR-S"
  tags: [sequence, connective]
  short: "This proposition is true if at least one symbol in sequence [E:blu ma] satisfies property [A:(ma)]."
cni:
  family: "R"
  gloss: "XOR-S"
  tags: [sequence, connective]
  short: "This proposition is true if exactly [E:gin] (default: 1) symbols in sequence [E:blu ma] satisfies property [A:(ma)]."
cena:
  family: "R"
  gloss: "AND-P0"
  tags: [sequence, connective]
  short: "This proposition is true if all propositions in sequence [E:blu ()] are true."
cene:
  family: "R"
  gloss: "OR-P0"
  tags: [sequence, connective]
  short: "This proposition is true if at least one proposition in sequence [E:blu ()] is true."
ceni:
  family: "R"
  gloss: "XOR-P0"
  tags: [sequence, connective]
  short: "This proposition is true if exactly [E:gin] (default: 1) proposition(s) in sequence [E:blu ()] is true."
cana:
  family: "R"
  gloss: "AND-P1"
  tags: [sequence, connective]
  short: "This proposition is true if [E:ma] satisfies all properties in sequence [A:blu (ma)]."
cane:
  family: "R"
  gloss: "OR-P1"
  tags: [sequence, connective]
  short: "This proposition is true if [E:ma] satisfies at least one property in sequence [A:blu (ma)]."
cani:
  family: "R"
  gloss: "XOR-P1"
  tags: [sequence, connective]
  short: "This proposition is true if [E:ma] satisfies exactly [O:gin] (default: 1) proposition(s) in sequence [A:blu (ma)]."
cona:
  family: "R"
  gloss: "AND-P2"
  tags: [sequence, connective]
  short: "This proposition is true if [E:ma] and [A:ma] satisfies all relations in sequence [O:blu (ma,ma)]."
cone:
  family: "R"
  gloss: "OR-P2"
  tags: [sequence, connective]
  short: "This proposition is true if [E:ma] and [A:ma] satisfies at least one relation in sequence [O:blu (ma,ma)]."
coni:
  family: "R"
  gloss: "XOR-P2"
  tags: [sequence, connective]
  short: "This proposition is true if [E:ma] and [A:ma] satisfies exactly [U:gin] (default: 1) relation(s) in sequence [O:blu (ma,ma)]."

mone:
  family: "R"
  gloss: "<"
  tags: [maths, ordering]
  short: "[E:tce* gen] is less than [A:tce* gen]."
  notes: |
    Operate on sets of numbers. True only if all members of [E] are less than all
    members of [A].
mona:
  family: "R"
  gloss: ">"
  tags: [maths, ordering]
  short: "[E:tce* gen] is greater than [A:tce* gen]."
  notes: |
    Operate on sets of numbers. True only if all members of [E] are less than all
    members of [A].

din:
  family: "R"
  gloss: "node (digraph)"
  tags: [digraph]
  short: "[E:tce* man] is a digraph node."
  notes: |
    Digraphs are used to represent transitions between states represented by
    nodes. These nodes are connected by directed edges (arcs) which represents
    transitions from one state to another. (see {dini})

    One concrete usage of digraphs is the concept of time, where each node
    represents a possible state of the universe, and arcs represents a possible
    transition to a future state according to the laws of physics. However this
    digraph have an infinite number of nodes, and it is better to think it
    term of a node being accessible from another one if there exist a path
    of arcs from one to the other. (see {dinu})

dini:
  family: "R"
  gloss: "arc (digraph)"
  tags: [world]
  short: "There exist an arc from node [E:tce* din] to node [A:tce* din]."
  notes: |
    All nodes in [E] have an arc with all nodes in [A].

dinu:
  family: "R"
  gloss: "path (digraph)"
  tags: [world]
  short: "There exist an path from node [E:tce* din] to node [A:tce* din]."
  notes: |
    Transitive version of {dini}.

deni:
  family: "R"
  gloss: "physical"
  tags: [world, "context-independent"]
  short: "[E:tce* man] is a physical entity which occupies [A:tce dan] in state [O:din]."
  notes: |

den:
  family: "R"
  gloss: "physical"
  tags: [world]
  short: "[E:tce* man] is a physical entity."
  notes: |
    Context dependent version of {deni}.
    Context contains [@zai den: deni], which is an entity representing some volume
    in space-time. Members of [E] must occupies a volume $(x) in some state $(s)
    such that it intersect with a volume $(y) in this state $(s).

dan:
  family: "R"
  gloss: "space point"
  tags: [space]
  short: "[E:tce* man] is a point in space."

dun:
  family: "R"
  gloss: "digraph interval"
  tags: [time]
  short: "[E:tce din] is a digraph interval."
  notes: |
    Contains an starting and ending node and all nodes on one possible path.
    All nodes must be on the same path, and starting and ending nodes having
    multiple possible paths will have the same amount of different intervals.  

zvi:
  family: "R"
  gloss: "event interval contains context interval"
  tags: [time]
  short: "[E:tce* kcin] is an event which occurs within the context interval."
  notes: |
    For each member $(x) of [E], [$(x)@zai dun] is contained in [@zai dun].

zve:
  family: "R"
  gloss: "occurence"
  tags: []
  short: "[E:tce* man] is an occurence of [A:()]."
  notes: |
    - [E@zai ce za] = zai zve (name = "occurence")
    - [E@zai dun: dun] is the smallest possible interval that makes [A] true
    when used as [@zai dun].

mun:
  family: "R"
  gloss: "ctx transf helper"
  tags: [context]
  short: |
    [E:kcin] is the context in which the proposition argument of [A:(())] is
    evaluated with.
  notes: |
    [A] is expected to evaluate its proposition argument with a modified
    context, which is stated to be [E]. Can be used with {pae} to make a
    context change "sticky"/permanent/to apply on following sentences.
  definition: |
    po mun ke ga be
      ga vie mue ke

# sen:
#   family: "R"
#   gloss: "update-present"
#   tags: [time]
#   short: |
#     Context transformation ({pae}): Pick a new "present" that is accessible from
#     /in the future of the current "present".

#     - [E:kcin @zai sen] = a state accessible from [@zai sen]
#   notes: |
#     [@zai sen] is a state acting as an origin representing the "present" that is
#     used for tenses such as {san}. While speaking [@zai sen] don't change when
#     time actually flows when the sentences are uttered. {sen} thus allow to
#     set [E @zai sen] to this new "present", which is in the future of the
#     previous "present" [@zai sen].
 
sin:
  family: "R"
  gloss: "past"
  tags: [time, context]
  short: |
    Beforehand, [E:()].
  notes: |
    - [E @zai den] = set of all worlds that are:
      - in the past of at least one state in [@zai den]
      - not part of [@zai den] themselves.

# sini:
#   family: "R"
#   gloss: "past (sticky)"
#   tags: [time]
#   short: |
#     Context transformation ({pae}): Update the context states as the past of the
#     current context states.
#   notes: |
#     - [E:kcin @zai den] = set of all worlds that are:
#       - in the past of at least one state in [@zai den]
#       - not part of [@zai den] themselves.

san:
  family: "R"
  gloss: "present"
  tags: [time, context]
  short: |
    It is presently the case that [E:()].
  notes: |
    - [E @zai den] = [@zai sen] (present origin).

# sani:
#   family: "R"
#   gloss: "present (sticky)"
#   tags: [time]
#   short: |
#     [E:kcin] is the current context with [@zai den] being a set containing only
#     [@zai sen] (present).
#   notes: |
#     Designed to work with {pae}.

sun:
  family: "R"
  gloss: "future"
  tags: [time, context]
  short: |
    Thereafter, [E:()].
  notes: |
    [E] is evaluated with the a modified context where [@zai den] the set of
    all worlds that are in the future of at least one world of current [@zai den]
    but which are not part of [@zai den] themselves.

# suni:
#   family: "R"
#   gloss: "future (sticky)"
#   tags: [time]
#   short: |
#     [E:kcin] is the current context with [@zai den] being the set of
#     all worlds that are in the future of at least one world of current [@zai den]
#     but which are not part of [@zai den] themselves.
#   notes: |
#     Designed to work with {pae}.

mini:
  family: "R"
  gloss: "speakers vocative"
  tags: [context]
  short: |
    Update who is the current speaker to [A:tce man].
    [E:kcin] is the current context with [@zai mi] = [A].
  notes: |
    Designed to work with {pae}.
moni:
  family: "R"
  gloss: "listeners vocative"
  tags: [context]
  short: |
    Update who is the current listener to [A:tce man].
    [E:kcin] is the current context with [@zai mo] = [A].
  notes: |
    Designed to work with {pae}.
  examples:
    - - |
          pae moni za umari\
          pa mi pra mo
      - | 
          Listener = Marie\
          I love you (Marie).

fule:
  family: "R"
  gloss: "knows"
  short: "[E:tce* den] knows fact [A:()] from source [O:tce man]."
dona:
  family: "R"
  gloss: "likes"
  tags: [emotion]
  short: "[E:tce* den] likes [A:tce* man]."
jveo:
  family: "R"
  gloss: "friend"
  tags: [emotion]
  short: "[E:tce* den] is a friend of [A:tce* den]."
kli:
  family: "R"
  gloss: "thanks"
  tags: [emotion]
  short: "[E:tce* den] thanks/is thankful to [A:tce* man] about [O:()] being true."
kre:
  family: "R"
  gloss: "helps"
  short: |
    [E:tce den] helps [A:tce ma] to satisfy property [O:(tce ma)].  
    [A] is the one satisfying [O], and [E] doesn't need to satisfy [O].
vahul:
  family: "R"
  gloss: "milk"
  short: "[E:tce* den] is milk."
mian:
  family: "R"
  gloss: "cat"
  tags: [animal]
  short: "[E:tce* den] is a cat/felid/member of family Felidae."
gla:
  family: "R"
  gloss: "tool"
  short: "[E:tce* ma] [tool] is used to make [A:()] [purpose] true."
kali:
  family: "R"
  gloss: "drinks"
  short: "[E:tce* den] drinks [E:tce* den]."
buri:
  family: "R"
  gloss: "eats"
  short: "[E:tce* den] eats [A:tce* den]."
zin:
  family: "R"
  gloss: "woman"
  short: "[E:tce* den] is a girl/woman/female (gender)."
zun:
  family: "R"
  gloss: "man"
  short: "[E:tce* den] is a boy/man/male (gender)."
tsae:
  family: "R"
  gloss: "creates"
  short: "[E:tce den] invents/creates/authors [A:tce* ma]."
zuna:
  family: "R"
  gloss: "inspired"
  short: "[E:tce* den] is inspired by [A:tce* ma]. [A] is a source of inspiration for [A]."
zvia:
  family: "R"
  gloss: "purpose"
  short: "[E:tce den] has goal/purpose/aims to satisfy [A:(tce den)]."
skal:
  family: "R"
  gloss: "computer"
  short: "[E:tce* den] is a computer."
sni:
  family: "R"
  gloss: "greets"
  short: "[E:tce* den] (default: speaker) says hello to/greets [A:tce* den] (default: listener)."
sne:
  family: "R"
  gloss: "goodbye"
  short: "[E:tce* den] (default: speaker) says goodbye to [A:tce* den] (default: listener)."
sna:
  family: "R"
  gloss: "welcomes"
  short: "[E:tce* den] (default: speaker) welcomes [A:tce* den] (default: listener) to place [O:tce* den]."
spi:
  family: "R"
  gloss: "says"
  short: "[E:tce den] says [A:tce* skan] to [O:tce* ma]."
spua:
  family: "R"
  gloss: "home"
  short: "[E:tce* den] is a home/house/nest for [A:tce* den]."
zaro:
  family: "R"
  gloss: "agrees"
  short: "[E:tce* den] agrees with [A:tce* den] that [O:()] is true."
vani:
  family: "R"
  gloss: "moves"
  short: "[E:tce* den] moves/goes to [A:tce* den] from [O:tce* den]."
gza:
  family: "R"
  gloss: "agentive cause"
  short: "[E:tce* den] is an agentive cause of [A:()] being true."
kini:
  family: "R"
  gloss: "learns"
  short: "[E:tce* den] learns/studies fact [A:()]."
seru:
  family: "R"
  gloss: "about"
  short: "[E:tce* man] is about subject [A:tce* man]."
snai:
  family: "R"
  gloss: "works"
  short: "[E:tce den] labors/works by satisfying property [A:(tce den)]."
ber:
  family: "R"
  gloss: "eberbanic"
  short: "[E:tce* man] reflects this language (eberban)."
pre:
  family: "R"
  gloss: "person"
  short: "[E:tce* den] is a person."
pra:
  family: "R"
  gloss: "loves"
  tags: [emotion]
  short: "[E:tce* den] loves [A:tce* man]."
vire:
  family: "R"
  gloss: "visits"
  short: "[E:tce* den] visits [E:tce* den]."
peol:
  family: "R"
  gloss: "city"
  short: "[E:tce* den] is a town/city."
zdir:
  family: "R"
  short: |
    [E:tce man] is amusing/entertaining/fun according to [A:tce* den] (default: speaker)
    in property [O:(tce man)].
  gloss: "amusing"
fir:
  family: "R"
  gloss: "color"
  tags: [color]
  short: "[E:tce* man] is a color."
firu:
  family: "R"
  gloss: "color"
  tags: [color]
  short: "[E:tce* fir] is a color of [A:tce den]."
sare:
  family: "R"
  gloss: "mutual"
  short: "[E:tco man] is a group where every pair of members mutualy satisfy relation [A:(tca man, tca man)]."
gli:
  family: "R"
  gloss: "happy"
  short: "[E:tce* den] is happy about [A:()] being true."
siro:
  family: "R"
  gloss: "translation"
  short: "[E:tce* skar] (source) has translation [A:tce* skar] (result)."
tcuin:
  family: "R"
  short: "[E:tce* den] is a tree."
  gloss: "tree"
jnaor:
  family: "R"
  gloss: "wild"
  short: "[E:tce* den] is wild/untamed."
jine:
  family: "R"
  gloss: "want"
  short: "[E:tce* den] desires/wants/wishes [A:()]."
fuher:
  family: "R"
  gloss: "fly"
  short: "[E:tce* den] flies [in air/space]."
folin:
  family: "R"
  gloss: "airplane"
  short: "[E:tce* den] is an airplane."
jleo:
  family: "R"
  gloss: "motivated"
  short: "[E:tce* den] is motivated to make [A:()] true by [O:tce* man] (motivation)."
  notes: |
    TODO: Define what a motivation is. someone else? propositions?
zuan:
  family: "R"
  gloss: "walks"
  short: "[E:tce* den] walks."
vune:
  family: "R"
  gloss: "enjoyable"
  short: "[E:tce* man] is enjoyable/great/nice for [A:tce* den]."
jvin:
  family: "R"
  gloss: "dances"
  short: "[E:tce* den] dances."
blan:
  family: "R"
  short: "[E:tce* man] is beautiful."
  gloss: "beautiful"
  notes: |
    TODO: According to which standard/observer ?
pcien:
  family: "R"
  gloss: "bread"
  short: "[E:tce* den] is bread."
ban:
  family: "R"
  short: "[E:tce* man] is a language."
  gloss: "language"
banu:
  family: "R"
  short: "[E:tce* skar] is expressed in language [A:tce* ban]."
  gloss: "language"
vli:
  family: "R"
  short: "[E:tce* skar] is written/inscribed on display/storage medium [A:tce* den]."
  gloss: "written"
soane:
  family: "R"
  gloss: "stolen"
  short: "[E:tce* den] is stolen from [A:tce* den]."
  notes: |
    Use with {gza} to express who/what steals (E-Xd).
tri:
  family: "R"
  gloss: "attemps"
  short: |
    [E:tce* den] tries/attemps to do/bring about [A:()].
    Success is neither implied or disimplied.
tuli:
  family: "R"
  gloss: "needs"
  short: "[E:tce* man] requires/needs [A:()] to being true. [A] is a necessity for [E]."
miun:
  family: "R"
  gloss: "sleeps"
  short: "[E:tce* den] sleeps."
juni:
  family: "R"
  gloss: "good"
  short: "[E:tce* man] is good."
  notes: |
    TODO: According to which standard/observer ?
junu:
  family: "R"
  gloss: "bad"
  short: "[E:tce* man] is bad."
  notes: |
    TODO: According to which standard/observer ?
kunu:
  family: "R"
  gloss: "feels"
  short: "[E:tce* den] feels sentiment/emotion/sensation [A:tce* man]."
  notes: |
    TODO: Define sentiment/emotion/sensation.
viru:
  family: "R"
  gloss: "sees"
  short: "[E:tce* den] sees [A:tce* den]."
pure:
  family: "R"
  gloss: "hears"
  short: "[E:tce* den] hears/listen to [A:tce* man]."
cen:
  family: "R"
  gloss: "word"
  short: "[E:tce* man] is a word."
  notes: |
    TODO: See {cei} notes.
vain:
  family: "R"
  gloss: "alive"
  short: "[E:tce* den] is alive."
vaun:
  family: "R"
  gloss: "dead"
  short: "[E:tce* den] is dead."
cfin:
  family: "R"
  gloss: "solid"
  tags: [matter]
  short: "[E:tce* den] is a solid [state of matter]."
cfen:
  family: "R"
  gloss: "liquid"
  tags: [matter]
  short: "[E:tce* den] is a liquid [state of matter]."
cfan:
  family: "R"
  gloss: "gas"
  tags: [matter]
  short: "[E:tce* den] is a gas [state of matter]."
jeon:
  family: "R"
  gloss: "water"
  tags: [matter]
  short: "[E:tce* den] is water."
gour:
  family: "R"
  gloss: "dog"
  tags: [animal]
  short: "[E:tce* den] is a dog."
kanan:
  family: "R"
  gloss: "wolf"
  tags: [animal]
  short: "[E:tce* den] is a wolf."
kroan:
  family: "R"
  gloss: "frog"
  tags: [animal]
  short: "[E:tce* den] is a frog."
toril:
  family: "R"
  gloss: "bird"
  tags: [animal]
  short: "[E:tce* den] is a bird."
cein:
  family: "R"
  gloss: "room"
  short: "[E:tce* den] is a room."
caun:
  family: "R"
  gloss: "animal"
  tags: [animal]
  short: "[E:tce* den] is an animal."
flur:
  family: "R"
  gloss: "plant"
  short: "[E:tce* den] is a plant."
jveno:
  family: "R"
  gloss: "friendly"
  short: "[E:tce* den] is kind/behaves friendly towards [A:tce* man]."
slari:
  family: "R"
  gloss: "rule"
  short: "[E:tce* man] is a rule/law prescribing/mandating/requiring [A:()]."
zire:
  family: "R"
  gloss: "respects"
  short: "[E:tce* den] respects [A:tce* man]."
zbui:
  family: "R"
  gloss: "copulates"
  short: "[E:tce* den] have sex/sexual intercourse/copulates/mates with [A:tce* den]."
jiro:
  family: "R"
  gloss: "shares"
  short: "[E:tce* den] shares [A:tce* man] with [O:tce* den]."
sier:
  family: "R"
  gloss: "internet"
  short: "[E:tca man] is the Internet."
stini:
  family: "R"
  gloss: "rigid"
  short: "[E:tce* den] is rigid/not bendable."
merue:
  family: "R"
  gloss: "organism"
  short: "[E:tce* den] is an organism / form of life."
slane:
  family: "R"
  gloss: "tied"
  short: "[E:tce* den] is tied/pinned to [A:tce* den]."
skien:
  family: "R"
  gloss: "program"
  short: "[E:tce* man] is a computer program."
zari:
  family: "R"
  gloss: "recipe"
  short: "[E:tce* man] is a recipe, algorithm, procedure to achieve result [A:tce* man]."
zeni:
  family: "R"
  gloss: "provided"
  short: "[E:tce* den] [supply/commodity] is provided to [A:tce* den]."
  notes: |
    Use with {gza} to express who/what provides [E].
curo:
  family: "R"
  gloss: "grammar"
  short: "[E:tca man] is the grammar of [A:tca man]."
  notes: |
    TODO: See {cei} notes.
tsiu:
  family: "R"
  gloss: "finds"
  short: "[E:tce* den] finds/discovers [A:tce* man]."
bun:
  family: "R"
  gloss: "text"
  short: "[A:tce* man] is a text."
bino:
  family: "R"
  gloss: "sick"
  short: "[E:tce* den] is ill/sick from disease [A:tce* man]."
saul:
  family: "R"
  gloss: "light"
  short: "[E:tce* den] is light [energy]."
cmiri:
  family: "R"
  gloss: "emits"
  short: "[E:tce* den] emits/produce [A:tce* den]."
cmiru:
  family: "R"
  gloss: "receives"
  short: "[E:tce* den] receives/absorbs [A:tce* den]."
flun:
  family: "R"
  gloss: "sound"
  short: "[A:tce* man] is a sound."
fana:
  family: "R"
  gloss: "social parent"
  tags: [kinship, family]
  short: "[E:tce* den] is a social parent of [A:tce* den] (child). [E] raises [A]."
vele:
  family: "R"
  gloss: "genetic parent"
  tags: [kinship, family]
  short: |
    [E:tce* den] is a genetic direct parent of [A:tce* den].
    [E] directly contributes to the genetic makeup of [A].
kana:
  family: "R"
  gloss: "sibling"
  tags: [kinship, family]
  short: "[E:tce* den] is a sibling/brother/sister of [A:tce* den]."
kene:
  family: "R"
  gloss: "nibling"
  tags: [kinship, family]
  short: "[E:tce* den] is a nibling/nephew/nice of [A:tce* den] (uncle/aunt)."
mana:
  family: "R"
  gloss: "mother"
  tags: [kinship, family]
  short: "[E:tce* den] is a (social) mother of [A:tce* den]."
  notes: Equivalent to {zin fana}.
pana:
  family: "R"
  gloss: "father"
  tags: [kinship, family]
  short: "[E:tce* den] is a (social) father of [A:tce* den]."
  notes: Equivalent to {zun fana}.
jnehu:
  family: "R"
  gloss: "takes care"
  tags: [kinship, family]
  short: |
    [E:tce* den] takes cares of [A:tce* den].
    [E] ensures that the needs of [A] are fulfulled.
dzana:
  family: "R"
  gloss: "married"
  tags: [kinship, family]
  short: "[E:tce* den] is married to [A:tce* den]."
kineo:
  family: "R"
  gloss: "touches"
  short: "[E:tce* den] touches [A:tce* den]."
varin:
  family: "R"
  gloss: "strange"
  short: "[E:tce* man] is strange/weird."
  notes: |
    TODO: According to who? Since it seems subjective, could it use a
    subjective "actor" in the context?
zvaor:
  family: "R"
  gloss: "accident"
  short: "[E:()] is an accident/unintentional."
teran:
  family: "R"
  gloss: "planet"
  short: "[E:tce* den] is a planet."
soran:
  family: "R"
  gloss: "star"
  short: "[E:tce* den] is a star."
zilan:
  family: "R"
  gloss: "moon"
  short: "[E:tce* den] is a major natural satellite/moon."
kari:
  family: "R"
  gloss: "axiom"
  short: "[E:tce* den] has axiomatic belief that [A:()] is true."
  notes: |
    [A] is an axiom, is presupposed to be true and it's truth value is never
    put into doupt.
meon:
  family: "R"
  gloss: "apple"
  short: "[E:tce* den] is an apple."
  tags: [food]
kcaor:
  family: "R"
  gloss: "table"
  short: "[E:tce* den] is a table."
stan:
  family: "R"
  gloss: "country"
  short: "[E:tce* den] is a country/territory."
drair:
  family: "R"
  gloss: "god"
  short: "[E:tce* man] is a god."
kroin:
  family: "R"
  gloss: "leg"
  short: "[E:tce* den] is a leg."
kani:
  family: "R"
  gloss: "infers from senses"
  short: "[E:tce* den] infers from their current sensorial experience that [A:()] is the case."
mara:
  family: "R"
  gloss: "remembers"
  short: "[E:tce* den] remembers the past experience of perceiving that [A:()] was the case."
zule:
  family: "R"
  gloss: "hearsay"
  short: "[E:tce* den] has got second-hand information or hearsay according to which [A:()] is the case."
muni:
  family: "R"
  short: "[E:tce* den] intuits that [A:()] is the case."
  gloss: "intuits"
sana:
  family: "R"
  gloss: "cultural knowledge"
  short: "[E:tce* den] has cultural knowledge, collective wisdom according to which [A:()] is the case."
valo:
  family: "R"
  gloss: "infers from multiple sources"
  short: "[E:tce* den] infers (from several sources of information) that [A:()] is the case."
bale:
  family: "R"
  gloss: "standing"
  short: "[E:tce* den] is standing on [A:tce* den]."
ctua:
  family: "R"
  gloss: "sit"
  short: "[E:tce* den] is sitting on [A:tce* den]."
proi:
  family: "R"
  gloss: "lying down"
  short: "[E:tce* den] is lying down on [A:tce* den]."
gavgin:
  family: "R"
  gloss: "crystal"
  short: "[E:tce* den] is a crystal/gem/mineral with orderly atomic structure [A:tca man]."
jalan:
  family: "R"
  short: "[E:tce* den] is awake."
  gloss: "awake"
celia:
  family: "R"
  gloss: "science"
  short: "[E:tca man] is the science/study/body of knowledge about topic [A:tce* man]."
  notes: |
    TODO: Define what a topic is.
filu:
  family: "R"
  gloss: "gives birth"
  short: "[E:tce* den] gives birth to/begets [A:tce* den]."
sahar:
  family: "R"
  gloss: "flower"
  short: "[E:tce* den] is a flower."
kena:
  family: "R"
  gloss: "holds"
  short: "[E:tce* den] holds/grasps [A:tce* den]."
clo:
  family: "R"
  gloss: "purpose"
  short: "[E:tce man] have purpose to satisfy property [A:(tce man)]."
jara:
  family: "R"
  gloss: "paid work"
  short: "[E:tce den] has satisfying property [A:(tce den)] as one of their jobs/occupations (paid work)."
zera:
  family: "R"
  short: "[E:tce den] has satisfying property [A:(tce den)] as a personality trait."
  gloss: "personality trait"
blae:
  family: "R"
  gloss: "owned"
  short: "[E:tce* man] is owned by [E:tce den]."
tsu:
  family: "R"
  gloss: "cardinality"
  short: "[E:tca gin] is the cardinality/number of elements of [A:tce a]."
dzui:
  family: "R"
  gloss: "able"
  short: "[E:tce den] is able to satisfy property [A:(tce den)]."

benal:
  family: "R"
  gloss: "healthy"
  short: "[E:tce* den] is healthy/fit/well/in good health."
jogmal:
  family: "R"
  gloss: "wound"
  short: "[E:tce* den] is a wound."
meul:
  family: "R"
  short: "[E:tce* den] (default: water) is raining."
  gloss: "rain"
znir:
  family: "R"
  gloss: "obligated"
  short: |
    [E:()] is obligated to be performed under authority [A:tce* den]. [E] is a duty.
    
    Examples: praying (in some religions), voting (in some countries), parents
    taking care of their children is societally obligated
zner:
  family: "R"
  gloss: "encouraged"
  short: |
    [E:()] is encouraged to be performed under authority [A:tce* den]. 
    [E] is a virtuous/upstanding behavior.
    
    Examples: charity, volunteer work, being polite
znar:
  family: "R"
  gloss: "tolerated"
  short: |
    [E:()] is neither encouraged nor discouraged (i.e. permitted) by authority [A:tce* den].
    [E] is tolerated.  
    
    Examples: basically most actions are {sena}, there are so many examples
    -- the act of breathing is sena
znor:
  family: "R"
  gloss: "discouraged"
  short: |
    [E:()] is discouraged to be performed under authority [A:tce* den]; [E] is reprehensible.
    
    Examples: lying (not under oath), crimes with are technically illegal but
    not prosecuted, laughing at a funeral, breaking certain religious laws
znur:
  family: "R"
  gloss: "forbidden"
  short: |
    [E:()] is forbidden to be done by authority [A:tce* den].
    
    Examples: for many religions speaking badly of their deity is forbidden,
    crimes which are prosecuted, cheating on your partner in a monogamous relationship
molai:
  family: "R"
  gloss: "reward/punishment"
  short: |
    [E:tce den] is made to satisfy [A:(tce den)] as a reward/punishment.  
    (E) is awarded/punished, with result that they satisfy [A].
krehu:
  family: "R"
  gloss: "meat"
  short: "[E:tce* den] is meat from animal/source [A:tce* den]."
drie:
  family: "R"
  gloss: "buys"
  short: "[E:tce den] buys [A:tce den] for price/in exchange for [O:tce den] (where success is implied)."
dria:
  family: "R"
  gloss: "offers"
  short: "[E:tce den] offers/intends to sell [A:tce den] for price/in exchange for [O:tce den] (where success is not implied)."
pubdel:
  family: "R"
  gloss: "soil"
  short: "[E:tce* den] is soil/dirt/pebbles/silt/clay (soil of all types)."
baluor:
  family: "R"
  gloss: "stone"
  short: "[E:tce* den] is a stone/rock/boulder (unified unbroken mass)."
boiur:
  family: "R"
  gloss: "dry land"
  short: "[E:tce* den] is dry land (not watery, can be stepped on). [antonyms: {suier}, {gzeon}]"
suier:
  family: "R"
  gloss: "sea"
  short: "[E:tce* den] is a sea/ocean/lake (relatively large non-flowing body of water)."
gzeon:
  family: "R"
  gloss: "river"
  short: "[E:tce* den] is a river/stream/brook (relatively large flowing body of water)."
saelo:
  family: "R"
  gloss: "air"
  short: "[E:tce* den] is air/breathable atmosphere/gas at correct pressure for [A:tce* den] (default: {flan}/humans)."
soeon:
  family: "R"
  gloss: "sky"
  short: "[E:tce* den] is is the sky (high troposphere and above)."
cnue:
  family: "R"
  short: "[E:tce* den] is a piece/portion/part of [A:tce den]."
  gloss: "portion"
duna:
  family: "R"
  short: "[E:tce den] gives [A:tce* den] to [O:tce den]."
  gloss: "gives"
  notes: |
    [E] no longer has legal or incidental ownership over [A].
    Now, [O] has legal or incidental ownership over [A].
    To specify whether it's legal or incidental, use
    (TODO: Add words for legal/incidental ownership)

    [E] does not accept payment or expect reciprocation from [O].
skar:
  family: "R"
  short: "[E:tce* man] is a string of data (quote)."
  gloss: "quote"
flan:
  family: "R"
  short: "[E:tce* man] is a human being."
  gloss: "human"
fuli:
  family: "R"
  short: "[E:tce gen] is the sum of numbers in list [A:blu tce gen]."
  gloss: "sum"
koro:
  family: "R"
  short: |
    [E:(tce gen,tce gen)] is a predicate of the form: [E:tce gen] is [number]
    times [A:tce gen] (default: 1).
  gloss: "number pred"
  notes: |
    Allows to check a predicate behaves like a number made from TI (+ jie), or
    other number predicates of the same form. Can be used to define math
    equations with the unknown being such a predicate, allowing to chain multiple
    the unknown for multiplication.

    Example: {poi ga \[ge be\] fuli \[vai koro ge\] \[fa te bu, ta ge bu, to ge ge\] \[fe ti\]}\
    Question "ga": What is some number x such that 1 + 2x + 3x¬≤ = 0 ?
kin:
  family: "R"
  short: "[E:ma] is a pair made of left component [A:a] and right component [O:o]."
  gloss: "pair"
  definition: |
    po e kin pi be
    ma vai bo kin
    fai mae ve ka be
    mae ve ko be
    ma vai ki be
    ki ma kin va ka fo ko vai
    fai bi ma
    ve bi kie
    fe kin va ka fo ko
    pi e kin pi

# Compounds (2):
e tsae ban:
  family: "C2"
  gloss: "conlang"
  short: "[E:tce* ban] is a constructed language/conlang."
e ber ban:
  family: "C2"
  gloss: "eberban"
  tags: [cultural]
  short: "[E:tca ban] is the eberban language."
e ujbo ban:
  family: "C2"
  gloss: "lojban"
  tags: [cultural]
  short: "[E:tca ban] is the lojban language."
e ufranse ban:
  family: "C2"
  gloss: "french language"
  tags: [cultural]
  short: "[E:tca ban] is the french language."
e ufranse stan:
  family: "C2"
  gloss: "France"
  tags: [cultural]
  short: "[E:tca stan] is France."
e uinglici ban:
  family: "C2"
  gloss: "english language"
  tags: [cultural]
  short: "[E:tca ban] is the english language."
e unihon ban:
  family: "C2"
  gloss: "japanese language"
  tags: [cultural]
  short: "[E:tca ban] is the japanese language."
e unihon stan:
  family: "C2"
  gloss: "Japan"
  tags: [cultural]
  short: "[E:tca stan] is Japan."
e udjonguo ban:
  family: "C2"
  gloss: "chinese language"
  tags: [cultural]
  short: "[E:tca ban] is chinese language."
e udjonguo stan:
  family: "C2"
  gloss: "China"
  tags: [cultural]
  short: "[E:tca stan] is China."
e udoitce ban:
  family: "C2"
  gloss: "german language"
  tags: [cultural]
  short: "[E:tca ban] is german language."
e udoitce stan:
  family: "C2"
  gloss: "Germany"
  tags: [cultural]
  short: "[E:tca stan] is Germany."
e umiser stan:
  family: "C2"
  gloss: "Egypt"
  tags: [cultural]
  short: "[E:tca stan] is Egypt."
e uhangu ban:
  family: "C2"
  gloss: "south korean language"
  tags: [cultural]
  short: "[E:tca ban] is south korean language."
e uhangu stan:
  family: "C2"
  gloss: "South Korea"
  tags: [cultural]
  short: "[E:tca stan] is South Korea."
e utcoson ban:
  family: "C2"
  gloss: "north korean language"
  tags: [cultural]
  short: "[E:tca ban] is north korean language."
e utcoson stan:
  family: "C2"
  gloss: "North Korea"
  tags: [cultural]
  short: "[E:tca stan] is North Korea."
e kre vire:
  family: "C2"
  gloss: "guided visit"
  short: "[E:tce* den] visits [A:tce* den] with guide [O:tce* den]."
e spi toril:
  family: "C2"
  gloss: "parrot"
  tags: [animal]
  short: "[E:tce* den] is a parrot."
e pu zoi:
  family: "C2"
  gloss: "paragraph"
  short: "[E:tce* man] is a paragraph."
  notes: |
    TODO: See {cei} notes.
e bino cnue:
  family: "C2"
  gloss: "symptom"
  short: "[E:tce* man] [ill/sickness] is characterized by symptom [A:tce* man]."
e spua teran:
  family: "C2"
  gloss: "home planet"
  short: "[E:tca den] is the home planet of species [A:tce* man] (default: {flan}/humans)."
e spua soran:
  family: "C2"
  gloss: "home star"
  short: "[E:tca den] is the home star of species [A:tce* man] (default: {flan}/humans)."
e jveno kena:
  family: "C2"
  gloss: "hugs"
  short: "[E:tce* den] hugs [A:tce* den]."
e kini bun:
  family: "C2"
  short: "[E:tce* man] is a course teaching about subject [A:tce* man]."
  gloss: "course"
  definition: "po ekinibun ke ka pi ke bun gla kini via seru ka"

a cen po bu:
  family: "C3"
  gloss: "dictionary"
  short: "[E:tce* man] is a dictionary."