# eberban word list (en) - 0.46
---
# -----
# Support for raw digits (informal)
# -----

0:
  family: "TI"
  gloss: "ti"
  tags: [number, digit, informal]
  short: "Digit 0"
1:
  family: "TI"
  gloss: "te"
  tags: [number, digit, informal]
  short: "Digit 1"
2:
  family: "TI"
  gloss: "ta"
  tags: [number, digit, informal]
  short: "Digit 2"
3:
  family: "TI"
  gloss: "to"
  tags: [number, digit, informal]
  short: "Digit 3"
4:
  family: "TI"
  gloss: "tu"
  tags: [number, digit, informal]
  short: "Digit 4"
5:
  family: "TI"
  gloss: "tie"
  tags: [number, digit, informal]
  short: "Digit 5"
6:
  family: "TI"
  gloss: "tia"
  tags: [number, digit, informal]
  short: "Digit 6"
7:
  family: "TI"
  gloss: "tio"
  tags: [number, digit, informal]
  short: "Digit 7"
8:
  family: "TI"
  gloss: "tiu"
  tags: [number, digit, informal]
  short: "Digit 8"
9:
  family: "TI"
  gloss: "tei"
  tags: [number, digit, informal]
  short: "Digit 9"

# -----
# Core grammar particles
# -----

ma:
  family: "MI"
  gloss: atom
  tags: [core]
  short: "[E:ma] is an atom (grammar)"
  definition: ùúÜc ùúÜe is-atom(e)
  notes: |
    Simplest non-predicate type. All more complex non-predicate types are
    symbols that must additionally satisfy some properties.

    There are an infinite amount of symbol which have no intrinsic meaning.
    Instead we can spawn some and declare that they are connected in some way
    using definitions.

    Can also be used alone for tautology (always true).
mai:
  family: "MI"
  gloss: "exists"
  tags: [core]
  short: "[E:a] exists."
  definition: ùúÜc ùúÜe ‚ä§
  notes:
    Binding the [E] place multiple time allows to express equality/equivalence.

    Can also be used alone for tautology (always true).
mae:
  family: "MI"
  gloss: "forall"
  tags: [core]
  short: "[E:(a)] is true for any argument (of the correct type)."
  definition: ùúÜc ùúÜE ‚àÄx E(c,x)
mao:
  family: "MI"
  gloss: "nary-imply"
  tags: [core]
  short: "Every tuple of arguments that satisfy predicate [E:a] also satisfy [A:a]."
  definition: ùúÜc ùúÜE ùúÜA ‚àÄx ‚àÄy ... E(c,x,y,...) ‚áí A(c,x,y,...)
  notes: |
    [E] can be used to represent tuples or arguments that satisfy [A].
    This can be used to express indirect questions, with [A] being a predicate
    acting as a question and [E] representing the indirect
    question/answer to the question.
mui:
  family: "MI"
  gloss: "unknown"
  tags: [core]
  short: "True if [E:()] have an unknown truth value."
  definition: ùúÜc ùúÜE is-unknown(E)
  notes: |
    All predicates return a trivalent truth value which is either true, false
    or undefined. 
mue:
  family: "MI"
  gloss: "context-extract"
  tags: [core]
  short: |
    True if property [E:(ma)] is true with the context provided as argument.
  definition: ùúÜc ùúÜE E(c,c)
  notes: |
    Exposes the context, an implicit/hidden argument to every predicate, as
    an explicit parameter. Allows to handle the context like any other argument.
mua:
  family: "MI"
  gloss: "context-apply"
  tags: [core]
  short: True if context [E:ma] makes [A:()] true.
  definition: ùúÜc ùúÜe ùúÜA A(e)
  transitive: true
  notes: |
    Evaluate a proposition with a provided context instead of the implicit
    forwarded context.
ba:
  family: "BA"
  gloss: "#inline-arg"
  tags: [core]
  short: "Inline argument marker."
vei:
  family: "VEI"
  gloss: "]"
  tags: [core, terminator, elidable]
  short: "Close the latest unclosed VI/FI."
vi:
  family: "VI"
  gloss: "&["
  tags: [core]
  short: "State the following 0-ary predicate chain, unrelated to any place."
ve:
  family: "VI"
  gloss: "E["
  tags: [core]
  short: |
    The E place of the suffixed predicate is shared with the following predicate
    chain.
  notes: |
    The following predicate chain is a property over the variable used in the
    suffixed predicate E place.
va:
  family: "VI"
  gloss: "A["
  tags: [core]
  short: |
    The A place of the suffixed predicate is shared with the following predicate
    chain.
  notes: |
    The following predicate chain is a property over the variable used in the
    suffixed predicate A place.
vo:
  family: "VI"
  gloss: "O["
  tags: [core]
  short: |
    The O place of the suffixed predicate is shared with the following predicate
    chain.
  notes: |
    The following predicate chain is a property over the variable used in the
    suffixed predicate O place.
vu:
  family: "VI"
  gloss: "U["
  tags: [core]
  short: |
    The U place of the suffixed predicate is shared with the following predicate
    chain.
  notes: |
    The following predicate chain is a property over the variable used in the
    suffixed predicate U place.
vie:
  family: "VI"
  gloss: "E=["
  tags: [core]
  short: |
    The E place of the suffixed predicate is equivalent to the following
    predicate chain.
  notes: |
    The following predicate chain have the same type as the E place and is
    equivalent. The E place must be a predicate place.
via:
  family: "VI"
  gloss: "A=["
  tags: [core]
  short: |
    The A place of the suffixed predicate is equivalent to the following
    predicate chain.
  notes: |
    The following predicate chain have the same type as the A place and is
    equivalent. The A place must be a predicate place.
vio:
  family: "VI"
  gloss: "O=["
  tags: [core]
  short: |
    The O place of the suffixed predicate is equivalent to the following
    predicate chain.
  notes: |
    The following predicate chain have the same type as the O place and is
    equivalent. The O place must be a predicate place.
viu:
  family: "VI"
  gloss: "U=["
  tags: [core]
  short: |
    The U place of the suffixed predicate is equivalent to the following
    predicate chain.
  notes: |
    The following predicate chain have the same type as the U place and is
    equivalent. The U place must be a predicate place.
fi:
  family: "FI"
  gloss: "]&["
  short: "State the following predicate chain, unrelated to any place."
fe:
  family: "FI"
  gloss: "]E["
  tags: [core]
  short: |
    The E place of the predicate suffixed with latest non-closed VI is shared
    with the following predicate chain.
  notes: |
    The following predicate chain is a property over the variable used in the
    suffixed predicate E place.
fa:
  family: "FI"
  gloss: "]A["
  tags: [core]
  short: |
    The A place of the predicate suffixed with latest non-closed VI is shared
    with the following predicate chain.
  notes: |
    The following predicate chain is a property over the variable used in the
    suffixed predicate A place.
fo:
  family: "FI"
  gloss: "]O["
  tags: [core]
  short: |
    The O place of the predicate suffixed with latest non-closed VI is shared
    with the following predicate chain.
  notes: |
    The following predicate chain is a property over the variable used in the
    suffixed predicate O place.
fu:
  family: "FI"
  gloss: "]U["
  tags: [core]
  short: |
    The U place of the predicate suffixed with latest non-closed VI is shared
    with the following predicate chain.
  notes: |
    The following predicate chain is a property over the variable used in the
    suffixed predicate U place.
fie:
  family: "FI"
  gloss: "]E=["
  tags: [core]
  short: |
    The E place of the predicate suffixed with latest non-closed VI is equivalent
    to the following predicate chain.
  notes: |
    The following predicate chain have the same type as the E place and is
    equivalent. The E place must be a predicate place.
fia:
  family: "FI"
  gloss: "]A=["
  tags: [core]
  short: |
    The A place of the predicate suffixed with latest non-closed VI is equivalent
    to the following predicate chain.
  notes: |
    The following predicate chain have the same type as the A place and is
    equivalent. The A place must be a predicate place.
fio:
  family: "FI"
  gloss: "]O=["
  tags: [core]
  short: |
    The O place of the predicate suffixed with latest non-closed VI is equivalent
    to the following predicate chain.
  notes: |
    The following predicate chain have the same type as the O place and is
    equivalent. The O place must be a predicate place.
fiu:
  family: "FI"
  gloss: "]U=["
  tags: [core]
  short: |
    The U place of the predicate suffixed with latest non-closed VI is equivalent
    to the following predicate chain.
  notes: |
    The following predicate chain have the same type as the U place and is
    equivalent. The U place must be a predicate place.
se:
  family: "SI"
  gloss: "<EE>"
  tags: [core]
  short: "Bind E place and disable chaining."
sa:
  family: "SI"
  gloss: "<AA>"
  tags: [core]
  short: "Bind A place and disable chaining."
so:
  family: "SI"
  gloss: "<OO>"
  tags: [core]
  short: "Bind O place and disable chaining."
su:
  family: "SI"
  gloss: "<II>"
  tags: [core]
  short: "Bind U place and disable chaining."
sea:
  family: "SI"
  gloss: "<EA>"
  tags: [core]
  short: "Bind E place and chains the A place."
seo:
  family: "SI"
  gloss: "<EO>"
  tags: [core]
  short: "Bind E place and chains the O place."
seu:
  family: "SI"
  gloss: "<EU>"
  tags: [core]
  short: "Bind E place and chains the U place."
sae:
  family: "SI"
  gloss: "<AE>"
  tags: [core]
  short: "Bind A place and chains the E place."
sao:
  family: "SI"
  gloss: "<AO>"
  tags: [core]
  short: "Bind A place and chains the O place."
sau:
  family: "SI"
  gloss: "<AU>"
  tags: [core]
  short: "Bind A place and chains the U place."
soe:
  family: "SI"
  gloss: "<OE>"
  tags: [core]
  short: "Bind O place and chains the E place."
soa:
  family: "SI"
  gloss: "<OA>"
  tags: [core]
  short: "Bind O place and chains the A place."
sou:
  family: "SI"
  gloss: "<OU>"
  tags: [core]
  short: "Bind O place and chains the U place."
sue:
  family: "SI"
  gloss: "<UE>"
  tags: [core]
  short: "Bind U place and chains the E place."
sua:
  family: "SI"
  gloss: "<UA>"
  tags: [core]
  short: "Bind U place and chains the A place."
suo:
  family: "SI"
  gloss: "<UO>"
  tags: [core]
  short: "Bind U place and chains the O place."
ze:
  family: "ZI"
  gloss: "#reuse"
  tags: [core]
  short: "Use the latest instance and variables of the predicate word instead of creating new ones."
zei:
  family: "ZI"
  gloss: "#reuse-compound"
  tags: [core]
  short: |
    Use the latest instance and variables of a compound containing this word
    instead of creating new ones.
zi:
  family: "ZI"
  gloss: "#short-neg"
  tags: [core, negation]
  short: |
    Narrow-scope negation : negates the predicate unit but not the existential variables it creates.
    There exist e, a,... such that unit(e, a, ...) is false.
zoie:
  family: "ZI"
  gloss: "#get-default-E"
  tags: [core, default]
  short: |
    Satisfy the default bound of the E place of [predicate] (set with {poie}).
zoia:
  family: "ZI"
  gloss: "#get-default-A"
  tags: [core, default]
  short: |
    Satisfy the default bound of the A place of [predicate] (set with {poia}).
zoio:
  family: "ZI"
  gloss: "#get-default-O"
  tags: [core, default]
  short: |
    Satisfy the default bound of the O place of [predicate] (set with {poio}).
zoiu:
  family: "ZI"
  gloss: "#get-default-U"
  tags: [core, default]
  short: |
    Satisfy the default bound of the U place of [predicate] (set with {poiu}).
zu:
  family: "ZI"
  gloss: "#()-to-(a)"
  tags: [core]
  short: |
    Transform an [A:()] place into an [A:(a)] place, which is provided the
    content of the [E:a] place.  
    The resulting predicate is transitive.

    While a SE before {zu} can still override the chaining behavior, a SE after
    {zu} allow to select which places to use for the transformation.

    For 2-vowels SE variants "sXY", X select the entity place, while Y select
    the proposition place. Not using a SE thus is equivalent to an implicit
    {sea}.

    For 1-vowel SE variants "sY", it is equivalent to "SeY". Since it doesn't
    make sense to use the same places for both sides, {se} is nonsensical.

    The selected proposition place will be the one being transitioned to in
    chaining (unless overwritten by a SE placed before {zu}).
poie:
  family: "PO"
  gloss: "#set-default-E"
  tags: [core, default]
  short: |
    Set the default constraint for the E place of the following predicate word.
poia:
  family: "PO"
  gloss: "#set-default-A"
  tags: [core, default]
  short: |
    Set the default constraint for the A place of the following predicate word.
poio:
  family: "PO"
  gloss: "#set-default-O"
  tags: [core, default]
  short: |
    Set the default constraint for the O place of the following predicate word.
poiu:
  family: "PO"
  gloss: "#set-default-U"
  tags: [core, default]
  short: |
    Set the default constraint for the U place of the following predicate word.
po:
  family: "PO"
  gloss: "#def"
  tags: [core]
  short: "Start a predicate definition."
poe:
  family: "PO"
  gloss: "#def-capture"
  tags: [core]
  short: "Start a predicate definition which captures the current context."
pahi:
  family: "PA"
  gloss: "#sentence-wrapper"
  tags: [core]
  short: |
    Registers a sentence wrapper, such that any sentence [E:()] expressed with
    {pa} is wrapped by this registered predicate.
pae:
  family: "PA"
  gloss: "#update-context"
  tags: [core, context]
  short: |
    Starts a context switching sentence, such that [E:ma] will be the context
    provided to any following sentences.
pahe:
  family: "PA"
  gloss: "#context-updater"
  tags: [core, context]
  short: |
    Registers a context-switching sentence, that will be applied automatically
    between each sentences as if it was used with {pae}.
pe:
  family: "PE"
  gloss: "["
  tags: [core]
  short: "Inline scope starter."
pei:
  family: "PEI"
  gloss: "]"
  tags: [core, terminator, elidable]
  short: "Inline scope elidible terminator."
pu:
  family: "PU"
  gloss: "#axiom-on"
  tags: [core]
  short: "Enable axiomatic predicate."
pui:
  family: "PU"
  gloss: "#axiom-off"
  tags: [core]
  short: "Disable axiomatic predicate."
be:
  family: "BE"
  gloss: "#argument-list"
  tags: [core, terminator, elidable]
  short: Borrowing and arguments list terminator.
bi:
  family: "BI"
  gloss: "#wide-neg"
  tags: [core, negation]
  short: "Wide scope negation ranging over existential variables and predicates."
bo:
  family: "BO"
  gloss: "#new-var"
  short: "Create a new variable and discard previous value if any."

# ----- 
# Extended grammar particles
# -----

mi:
  family: "MI"
  short: "[E:tce* man] is I/me/a speaker/author."
  gloss: "me"
mo:
  family: "MI"
  short: "[E:tce* man] is you, a listener."
  gloss: "you"
mio:
  family: "MI"
  short: |
    Every member of [E:tco* man] is either I/a speaker/author; or you, a listener; and
    contains at least one of each.
  gloss: "inclusive-we"
mie:
  family: "MI"
  short: |
    Every member of [E:tco* man] is either I/a speaker/author; or something that is not a listener;
    and contains at least one of each.
  gloss: "exclusive-we"
ji:
  family: "JI"
  gloss: "#cardinal"
  tags: [terminator, number, set]
  transitive: true
  short: |
    Cardinal number terminator. The preceding number have definition:\
    [E:tce* a] is (a group of) [number] things satisfying [A:(tca a)].\
    The number must be a natural number (non zero positive integer).
jie:
  family: "JI"
  gloss: "#abstract-number"
  tags: [terminator, number, elidable]
  transitive: true
  short: |
    Abstract number terminator. The preceding number have definition:\
    [E:tce gen] is the number [number] times [A:tce gen] (default: 1).
jia:
  family: "JI"
  gloss: "#raw-cardinal"
  tags: [terminator, number, set]
  transitive: true
  short: |
    Raw cardinal number terminator. The preceding number have definition:\
    [E:tce* a] is (a group of) [number] things satisfying [A:(a)].\
    The number must be a natural number (non zero positive integer).
jio:
  family: "JI"
  gloss: "#universal-cardinal"
  tags: [terminator, number, set]
  transitive: true
  short: |
    Universal cardinal number terminator. The preceding number have definition:\
    [E:tce* a] is (a group of) the only [number] things satisfying [A:(tca a)].\
    The number must be a natural number (non zero positive integer).
jioa:
  family: "JI"
  gloss: "#raw-universal-cardinal"
  tags: [terminator, number, set]
  transitive: true
  short: |
    Raw universal cardinal number terminator. The preceding number have definition:\
    [E:tce* a] is (a group of) the only [number] things satisfying [A:(a)].\
    The number must be a natural number (non zero positive integer).
jiu:
  family: "JI"
  gloss: "#ordinal"
  tags: [terminator, number, list]
  transitive: true
  short: |
    Ordinal number terminator. The preceding number have definition:\
    [E:tca a] is the [number]th member of sequence [A:blu a].\
    The number must be a natural number (non zero positive integer).
ju:
  family: "JO"
  gloss: "#base"
  tags: [number, separator]
  short: Base separator. Base is defined using the last allowed digit.
jo:
  family: "JO"
  gloss: "#frac-sep"
  tags: [number, separator]
  short: |
    Fractional part separator. Separate the integer part from the excess beyond
    the integer part.
joi:
  family: "JO"
  gloss: "#frac-sep-neg"
  tags: [number, separator]
  short: |
    Negative fractional part separator. Separate the integer part from the excess beyond
    the integer part, and indicates that the number is negative.
ja:
  family: "JA"
  gloss: "#repeating"
  tags: [number, separator]
  short: |
    Repeating part separator. Inside a fractional part starts a string of
    digits that repeat infinitely.
je:
  family: "JE"
  gloss: "#magnitude"
  tags: [number, separator]
  short: |
    Magnitude part separator. Number is multiplied by base^magnitude.
jei:
  family: "JE"
  gloss: "#magnitude-neg"
  tags: [number, separator]
  short: |
    Negative magnitude part separator. Number is multiplied by base^(-magnitude).
ti:
  family: "TI"
  short: "Digit 0"
  gloss: "0"
  tags: [digit, number]
te:
  family: "TI"
  short: "Digit 1"
  gloss: "1"
  tags: [digit, number]
ta:
  family: "TI"
  short: "Digit 2"
  gloss: "2"
  tags: [digit, number]
to:
  family: "TI"
  short: "Digit 3"
  gloss: "3"
  tags: [digit, number]
tu:
  family: "TI"
  short: "Digit 4"
  gloss: "4"
  tags: [digit, number]
tia:
  family: "TI"
  short: "Digit 5"
  gloss: "5"
  tags: [digit, number]
tie:
  family: "TI"
  short: "Digit 6"
  gloss: "6"
  tags: [digit, number]
tio:
  family: "TI"
  short: "Digit 7"
  gloss: "7"
  tags: [digit, number]
tiu:
  family: "TI"
  short: "Digit 8"
  gloss: "8"
  tags: [digit, number]
tei:
  family: "TI"
  short: "Digit 9"
  gloss: "9"
  tags: [digit, number]
tea:
  family: "TI"
  short: "Digit A"
  gloss: "A"
  tags: [digit, number]
teo:
  family: "TI"
  short: "Digit B"
  gloss: "B"
  tags: [digit, number]
teu:
  family: "TI"
  short: "Digit C"
  gloss: "C"
  tags: [digit, number]
tai:
  family: "TI"
  short: "Digit D"
  gloss: "D"
  tags: [digit, number]
tae:
  family: "TI"
  short: "Digit E"
  gloss: "E"
  tags: [digit, number]
tao:
  family: "TI"
  short: "Digit F"
  gloss: "F"
  tags: [digit, number]
ca:
  family: "CA"
  short: "Starts grammatically correct eberban quote. [E:tca skan] is text [quote]."
  gloss: "#quote-start"
cai:
  family: "CAI"
  short: "Ends grammatically correct eberban quote."
  gloss: "#quote-end"
  tags: [terminator]
ce:
  family: "CE"
  short: "Quote next word. [E:tca skan] is word [word]."
  gloss: "#word-quote"
cei:
  family: "CE"
  short: "[E:tca man] is the family of word [word]."
  gloss: "#family-quote"
  nodes: |
    TODO: Add predicates to manipulate language concepts.
co:
  family: "CO"
  short: "[E:tca skan] is a quote of an arbitrary string of space separated \"words\"."
  gloss: "#foreign-quote"
cu:
  family: "CU"
  gloss: "#erase"
  short: |
    Erase the currently sentence/defintion.
    Used when a mistake is made to redo the sentence/definition."
za:
  family: "ZI"
  gloss: "#named"
  short: "[E:tce a] is named after the E place of the following predicate."
  notes: |
    Another place can be selected by adding a SE particle between {za} and the
    predicate.
zai:
  family: "ZI"
  gloss: "#ident"
  short: "[E:ma] is the symbol representing the E place of the following predicate."
  note: |
    Another place can be selected by adding a SE particle between {zai} and the
    predicate. Using {zai} before a specific predicate will always yield the
    same unique symbol.

    It is mainly used to create identifiers used as map keys (see {kce}).
pa:
  family: "PA"
  gloss: "#assert"
  short: "Starts an assertive sentence, that the speaker asserts is true."
pahu:
  family: "PA"
  gloss: "#import"
  short: |
    Import another text represented by the [E:tce* skan] place of this scope.
    Imports allows to make texts defining non-standard vocabulary about a subject,
    so that it can be used anytime someone wants to talk about this subject.
    Such subjects are advanced physics, chemistry or maths for example.
  notes: "TODO: Define how the represented text is resolved."
poi:
  family: "PO"
  gloss: "#question"
  short: "Start a question definition, the arguments being the unknown informations."
di:
  family: "DI"
  gloss: "#attention-focus"
  short: |
    Attention focus: the listener should be extra attentive to the following word.
    Maybe it would be especially prone to confusion?
die:
  family: "DI"
  gloss: "#contrastive-focus"
  short: |
    Contrastive focus: It's that thing and not something else that was expected.
dia:
  family: "DI"
  gloss: "#newsworthiness focus"
  short: |
    Newsworthiness focus: Marks the part of the sentence containing the most
    important new information.
de:
  family: "DE"
  gloss: "#interjection"
  short: "Attach a single predicate that acts as an interjection."
dei:
  family: "DE"
  gloss: "#metadata"
  short: "Attached word is a metadata tag / hashtag."
da:
  family: "DA"
  gloss: "("
  short: "Starts parenthetical note."
dai:
  family: "DAI"
  gloss: ")"
  tags: [terminator]
  short: "Ends parenthetical note."
du:
  family: "DU"
  gloss: "#paragraph"
  short: "Marks a new paragraph/section/change of subject."
bu:
  family: "BU"
  gloss: "#list-separator"
  tags: [list]
  short: "List separator."
buhu:
  family: "BU"
  gloss: "#list-erased"
  tags: [list]
  short: "Erase the current list item."

# -----
# Defined predicate words (in order of book)
# -----

vari:
  family: "R"
  gloss: "and"
  tags: [connective]
  short: "True if both [E:()] and [A:()] are true."
  notes: |
    It is often simpler to use {vi/fi}.
  definition: |
    po vari ge ga be
    ge vi ga
vare:
  family: "R"
  gloss: "or"
  tags: [connective]
  short: "True if [E:()] or [A:()] or both is true."
  definition: |
    po vare ge ga be
    bi ma
      vi bi ge
      fi bi ga
varu:
  family: "R"
  gloss: "if"
  tags: [connective]
  short: |
    If [E:()] is then [A:()] (default: true) is true, otherwise [O:()]
    (default: true) is true.
  definition: |
    po varu ge ga be
    vare
      va vari
        ve ge
        fa ga
        vei
      fe vari
        ve bi ge
        fa go
    poia varu mai
    poio varu mai
kidvo:
  family: "R"
  gloss: "transitive-rel"
  short: |
    [E:a] and [A:a] satisfy relation [O:(a,a)] transitively.
  definition: |
    po kidvo ke ka go be
    vare
      vie ke go ka
      fia bo ki
        vi ke go ki
        fi ki kidvo
          va ka
          fio go
tcui:
  family: "R"
  gloss: "set-all-raw"
  tags: [set, axiom]
  short: |
    [E:ma] is the (non-empty) set of all things that individualy satisfy [A:(a)].
  definition: |
    po e tcui pi be
    ma
      vi bo tcui
      fi bo tcie
      fi mae
        ve gi be varu
          vie gi mai
          fia mae
            ve ki be varu
              vie ki ma
              fie ki mua
                ma
                vi bo ke tcui gi
                fi mae
                  ve ka be mai
                    vie ka tcie ke
                    fie ka gi
    pi e tcui pi
tcie:
  family: "R"
  gloss: "set-member-raw"
  tags: [set, axiom]
  short: |
    [E:a] is a member of set [A:tcui a].
  definition: See definition of tcui.
tcia:
  family: "R"
  gloss: "subset"
  tags: [set]
  short: |
    [E:tcui a] is a subset of [A:tcui a].
  definition: |
    po tcia ke ka be
    mae
      ve ki be varu 
        vie ki tcie ke
        fia ki tcie ka
tcei:
  family: "R"
  gloss: "set-some-raw"
  tags: [set]
  short: |
    [E:tcui a] is a (non-empty) set of some things that individualy satisfy [A:(a)].
  definition: |
    po tcie ke gia be
    ke tcia tcui gia
tcai:
  family: "R"
  gloss: "set-one-raw"
  tags: [set]
  short: |
    [E:tcui a] is a set containing exactly one member which satisfy [A:(a)].
  definition: |
    po tcia ke gia be
    ma
      vi ke tcei gia
      fi bi ma
        vi bo ka tcie ke
        fi bo ko bi ka
        fi ko tcie ke
tcoi:
  family: "R"
  gloss: "set-many-raw"
  tags: [set]
  short: |
    [E:tcui a] is a set of at least 2 things that individualy satisfy [A:(a)].
  definition: |
    po tcia ke gia be
    ma
      vi ke tcei gia
      fi bo ka tcie ke
      fi bo ko bi ka
      fi ko tcie ke  
tca:
  family: "R"
  gloss: "set-one"
  tags: [set]
  short: |
    [E:tcai a] is a set containing exactly one member, and satisfy [A:(tcai a)].
  definition: |
    po tca ke gia be
    ke se tcai gia
tcu:
  family: "R"
  gloss: "set-all"
  tags: [set]
  short: |
    [E:tcui a] is the (non-empty) set of all things that individualy satisfy [A:(tca a)].
  definition: |
    po tcu ke gia be
    ke tcui
      via be ba tcie tca gia
tce:
  family: "R"
  gloss: "set-some"
  tags: [set]
  short: |
    [E:tcei a] is a (non-empty) set of some things that individualy satisfy [A:(tca a)].
  definition: |
    po tce ke gia be
    ke tcei
      via be ba tcie tca gia
tco:
  family: "R"
  gloss: "set-many"
  tags: [set]
  short: |
    [E:tcoi a] is a set of at least 2 things that individualy satisfy [A:(tca a)].
  definition: |
    po tco ke gia be
    ke tcoi
      via be ba tcie tca gia
tci:
  family: "R"
  gloss: "set-member"
  tags: [set]
  short: "[E:tca a] is a member of set [A:tce a]."
  definition: |
    po tci ke ka be
    ke tca tcie ka
dji:
  family: "R"
  gloss: "set-union"
  tags: [set]
  short: "[E:tce a] is the union of sets [A:tce a] and [O:tce a]."
  definition: |
    po dji ke ka ko be
    ke tcu
      va ki be vare
        ve ki tci ka
        fa ki tci ko
dje:
  family: "R"
  gloss: "set-intersection"
  tags: [set]
  short: "[E:tce a] is the intersection of sets [A:tce a] and [O:tce a]."
  definition: |
    po dje ke ka ko be
    ke tcu
      va ki be vari
        ve ki tci ka
        fa ki tci ko
dja:
  family: "R"
  gloss: "set-diff"
  tags: [set]
  short: "[E:tce a] is the difference between sets [A:tce a] and [O:tce a]."
  definition: |
    po dja ke ka ko be
    ke tcu
      va ki be vari
        ve ki tci ka
        fa bi ki tci ko
djo:
  family: "R"
  gloss: "set-local-max"
  tags: [set]
  short: "[E:tce a] is the locally largest set that satisfy [A:(tce a)]."
  definition: |
    po djo ke gia be
    ma
      vi ke gia
      fi bi bo ka
        vi ka bi ke
        fi ka gia
        fi ke tcia ka
dju:
  family: "R"
  gloss: "set-local-min"
  tags: [set]
  short: "[E:tce a] is the locally smallest set that satisfy [A:(tce a)]."
  definition: |
    po djo ke gia be
    ma
      vi ke gia
      fi bi bo ka
        vi ka bi ke
        fi ka gia
        fi ka tcia ke
kin:
  family: "R"
  gloss: "par"
  short: |
    [E:ma] is a pair made of left component [A:a] and right component [O:o].
  definition: |
    po e kin pi be
    ma
      vi bo kin
      fi mae
        ve ka be mae 
          ve ko be
          ma
           vi ki be ki ma kin 
             va ka
             fo ko
             fi bi ma
               ve bi ki
               fe kin
                 va ka
                 fo ko
    pi e kin pi
e zai pe:
  family: "C2"
  gloss: "ident"
  short: |
    [E:ma] is an identifier/name made from property [A:(a)].
  definition: |
    po ezaipe ke gi be
    ma
      vi ke kin 
        va ezaipe ezaipe
        fo gi vi
        fi vare
          vie gi mai
          fie bi gi mai
blur:
  family: "R"
  gloss: "empty-list"
  tags: [list]
  short: |
    [E:ma] is the empty list.
blu:
  family: "R"
  gloss: "list"
  tags: [list]
  short: |
    [E:blun] is a list of things all satisfying [A:(a)].
  notes: |
    {bu} is syntaxic sugar to make lists.
bla:
  family: "R"
  gloss: "list-lfold"
  tags: [list]
  short: |
    Left folds list [E:blu a] with initial [A:b] and final [O:b] carries by
    applying predicate [U:(b,b,a)] in first to last order.
blai:
  family: "R"
  gloss: "list-rfold"
  tags: [list]
  short: |
    Right folds list [E:blu a] with initial [A:b] and final [O:b] carries by
    applying predicate [U:(b,b,a)] in last to first order.
bli:
  family: "R"
  gloss: "list-set"
  tags: [list, set]
  short: |
    [E:tce a] is the set containing only all the elements in list [A:blu a].
kcin:
  family: "R"
  gloss: "map"
  tags: [map]
  short: |
    [E:ma] is a map.
kcil:
  family: "R"
  gloss: "empty-map"
  tags: [map]
  short: |
    [E:kcin] is the empty map.
kce:
  family: "R"
  gloss: "map-entry"
  tags: [map]
  short: |
    [E:a] is the value in map [A:kcin] for key [O:ma].
kcei:
  family: "R"
  gloss: "context-map-entry"
  tags: [map, context]
  short: |
    [E:a] is the value in the context map for key [A:ma].
kcani:
  family: "R"
  gloss: "map-remove"
  tags: [map]
  short: |
    [E:kcin] is obtained from [A:kcin] by removing the entry with key [O:ma].
    If [A] don't have entry with key [O] then [E] = [A].
kcoi:
  family: "R"
  gloss: "map-insert"
  tags: [map]
  short: |
    [E:kcin] is obtained from [A:kcin] by inserting an entry with key [O:ma] and
    value [U:ma]. If [A] have an entry with key [O] then it is removed to insert
    the entry with key [O] and value [U].
kcui:
  family: "R"
  gloss: "map-update"
  tags: [map]
  short: |
    [E:kcin] is obtained from [A:kcin] by transforming the value of entry with
    key [O:ma] using relation [U:(a,a)]. It implies that [A] must have an entry
    with key [O].
kca:
  family: "R"
  gloss: "map-list-wrapper"
  tags: [map, list]
  short: |
    [E:kcin] represents a map that can be optained from [A:kcin] by applying the
    list of transformations [O:blu ()].
kcan:
  family: "R"
  gloss: "map-list-remove"
  tags: [map, list]
  short: |
    {kca} operation: remove entry with key [E:ma].
kco:
  family: "R"
  gloss: "map-list-insert"
  tags: [map, list]
  short: |
    {kca} operation: insert entry with key [E:ma] and value [A:a].
kcu:
  family: "R"
  gloss: "map-list-update"
  tags: [map, list]
  short: |
    {kca} operation: transform entry with key [E:ma] with value relation
    (old,new) [A:(a,a)].
kcar:
  family: "R"
  gloss: "context-map-list-wrapper"
  tags: [map, list, context]
  short: |
    Transformations [E:blu ()] are applied on the context before it is used to evaluate [A:()].
din:
  family: "R"
  gloss: "instant"
  tags: [time]
  short: |
    [E:ma] is an instant (digraph node).
dini:
  family: "R"
  gloss: "time-arc"
  tags: [time]
  short: |
    [E:ma] is an instant (digraph node).
dinu:
  family: "R"
  gloss: "time-span"
  tags: [time]
  short: |
    There exist an path/span [O:blu din] from node [E:din] to node [A:din].
den:
  family: "R"
  gloss: "update-present"
  tags: [time]
  short: |
    [E:()] is evaluated with a more recent present.
pane:
  family: "R"
  gloss: "inner-context"
  tags: [context]
  short: |
    [E:ma] is the context exposed to a predicate when it evaluated by [A:(())].
del:
  family: "R"
  gloss: "present-span"
  tags: [time]
  short: |
    [E:dinu] is the present time span.
zvi:
  family: "R"
  gloss: "event-span"
  tags: [time]
  short: |
    [E:dinu] is a time span shared by all events of [A:()].
zvin:
  family: "R"
  gloss: "event-apply"
  tags: [time]
  short: |
    Time span [E:dinu] contains context time span.
zvil:
  family: "R"
  gloss: "event-apply"
  tags: [time, context]
  short: |
    [E:dinu] is the context time span.
zvan:
  family: "R"
  gloss: "necessary-helper"
  tags: [time]
  short: |
    For all time span x that contains the context time span, either:
    - [E:(dinu)] evaluated with x is true
    - [E] is true if evaluated with a time span containing x
sel:
  family: "R"
  gloss: "possible-meets"
  tags: [time]
  short: |
    It is possible that [E:()] meets the context time span.
sen:
  family: "R"
  gloss: "necessary-meets"
  tags: [time]
  short: |
    It is necessary that [E:()] meets the context time span.
sal:
  family: "R"
  gloss: "possible-starts"
  tags: [time]
  short: |
    It is possible that [E:()] starts the context time span.
san:
  family: "R"
  gloss: "necessary-starts"
  tags: [time]
  short: |
    It is necessary that [E:()] starts the context time span.
sol:
  family: "R"
  gloss: "possible-finishes"
  tags: [time]
  short: |
    It is possible that [E:()] finishes the context time span.
son:
  family: "R"
  gloss: "necessary-finishes"
  tags: [time]
  short: |
    It is necessary that [E:()] finishes the context time span.
sul:
  family: "R"
  gloss: "possible-met-by"
  tags: [time]
  short: |
    It is possible that [E:()] is met by the context time span.
sun:
  family: "R"
  gloss: "necessary-met-by"
  tags: [time]
  short: |
    It is necessary that [E:()] is met by the context time span.
siel:
  family: "R"
  gloss: "possible-before"
  tags: [time]
  short: |
    It is possible that [E:()] is before the context time span.
sien:
  family: "R"
  gloss: "necessary-before"
  tags: [time]
  short: |
    It is necessary that [E:()] is before the context time span.
sial:
  family: "R"
  gloss: "possible-contains"
  tags: [time]
  short: |
    It is possible that [E:()] contains the context time span.
sian:
  family: "R"
  gloss: "necessary-contains"
  tags: [time]
  short: |
    It is necessary that [E:()] contains the context time span.
siol:
  family: "R"
  gloss: "possible-is-contained"
  tags: [time]
  short: |
    It is possible that [E:()] is contained by the context time span.
  notes: |
    Is equivalent to {siol}, as since E is contained in the context span
    then there is only one possible timeline. Thus it is both possible and
    necessary.
sion:
  family: "R"
  gloss: "necessary-is-contained"
  tags: [time]
  short: |
    It is necessary that [E:()] is contained by the context time span.
  notes: |
    Is equivalent to {siol}, as since E is contained in the context span
    then there is only one possible timeline. Thus it is both possible and
    necessary.
siul:
  family: "R"
  gloss: "possible-after"
  tags: [time]
  short: |
    It is possible that [E:()] is after the context time span.
siun:
  family: "R"
  gloss: "necessary-after"
  tags: [time]
  short: |
    It is necessary that [E:()] is after the context time span.
sil:
  family: "R"
  gloss: "possible-overlaps"
  tags: [time]
  short: |
    It is possible that [E:()] overlaps with the context time span.
sin:
  family: "R"
  gloss: "necessary-overlaps"
  tags: [time]
  short: |
    It is necessary that [E:()] overlaps with the context time span.
dan:
  family: "R"
  gloss: "occurs-presently"
  tags: [time]
  short: |
    [E:()] presently occurs.
don:
  family: "R"
  gloss: "occurs-anytime"
  tags: [time]
  short: |
    [E:()] occurs at some time (no constraint).
doni:
  family: "R"
  gloss: "occurs-time-span"
  tags: [time]
  short: |
    [A:()] occurs in a time span that overlaps [E:dinu].

# -----
# Other vocabulary, not yet defined in eberban
# -----

pen:
  family: "R"
  gloss: physical
  tags: [space]
  short: |
    [E:tca man] is a physical entity which occupies volume [A:tce man] at
    instant [O:dini].
pan:
  family: "R"
  gloss: context-physical
  tags: [space, context]
  short: |
    [E:tca man] is a physical entity which intersects with the context volume.
gin:
  family: "R"
  gloss: number-natural
  tags: [math, number]
  short: "[E:tce* man] is a natural number."
gini:
  family: "R"
  gloss: succ
  tags: [partial, math, number]
  short: "[E:tca ma] is the successor of [A:tca ma]."
ginin:
  family: "R"
  gloss: zero
  tags: [math, number]
  short: "[E:tca gin] is zero."
gen:
  family: "R"
  gloss: number-real
  tags: [math, number]
  short: "[E:tce* man] is a real number."

skan:
  family: "R"
  gloss: string
  tags: [struct, string]
  short: "[E:tce* man] is a string of data."
  notes: |
    TODO: Improve definition and add oither predicates to interact with it.

    It's goal is to be able to manipulate both native and foreign quotes (which
    can be speakable, embeded file, etc).

cna:
  family: "R"
  gloss: "AND-S"
  tags: [sequence, connective]
  short: "This proposition is true if all symbols in sequence [E:blu ma] satisfies property [A:(ma)]."
cne:
  family: "R"
  gloss: "OR-S"
  tags: [sequence, connective]
  short: "This proposition is true if at least one symbol in sequence [E:blu ma] satisfies property [A:(ma)]."
cni:
  family: "R"
  gloss: "XOR-S"
  tags: [sequence, connective]
  short: "This proposition is true if exactly [E:gin] (default: 1) symbols in sequence [E:blu ma] satisfies property [A:(ma)]."
cena:
  family: "R"
  gloss: "AND-P0"
  tags: [sequence, connective]
  short: "This proposition is true if all propositions in sequence [E:blu ()] are true."
cene:
  family: "R"
  gloss: "OR-P0"
  tags: [sequence, connective]
  short: "This proposition is true if at least one proposition in sequence [E:blu ()] is true."
ceni:
  family: "R"
  gloss: "XOR-P0"
  tags: [sequence, connective]
  short: "This proposition is true if exactly [E:gin] (default: 1) proposition(s) in sequence [E:blu ()] is true."
cana:
  family: "R"
  gloss: "AND-P1"
  tags: [sequence, connective]
  short: "This proposition is true if [E:ma] satisfies all properties in sequence [A:blu (ma)]."
cane:
  family: "R"
  gloss: "OR-P1"
  tags: [sequence, connective]
  short: "This proposition is true if [E:ma] satisfies at least one property in sequence [A:blu (ma)]."
cani:
  family: "R"
  gloss: "XOR-P1"
  tags: [sequence, connective]
  short: "This proposition is true if [E:ma] satisfies exactly [O:gin] (default: 1) proposition(s) in sequence [A:blu (ma)]."
cona:
  family: "R"
  gloss: "AND-P2"
  tags: [sequence, connective]
  short: "This proposition is true if [E:ma] and [A:ma] satisfies all relations in sequence [O:blu (ma,ma)]."
cone:
  family: "R"
  gloss: "OR-P2"
  tags: [sequence, connective]
  short: "This proposition is true if [E:ma] and [A:ma] satisfies at least one relation in sequence [O:blu (ma,ma)]."
coni:
  family: "R"
  gloss: "XOR-P2"
  tags: [sequence, connective]
  short: "This proposition is true if [E:ma] and [A:ma] satisfies exactly [U:gin] (default: 1) relation(s) in sequence [O:blu (ma,ma)]."
mone:
  family: "R"
  gloss: "<"
  tags: [maths, ordering]
  short: "[E:tce* gen] is less than [A:tce* gen]."
  notes: |
    Operate on sets of numbers. True only if all members of [E] are less than all
    members of [A].
mona:
  family: "R"
  gloss: ">"
  tags: [maths, ordering]
  short: "[E:tce* gen] is greater than [A:tce* gen]."
  notes: |
    Operate on sets of numbers. True only if all members of [E] are less than all
    members of [A].
fule:
  family: "R"
  gloss: "knows"
  short: "[E:tce* pan] knows fact [A:()] from source [O:tce man]."
dona:
  family: "R"
  gloss: "likes"
  tags: [emotion]
  short: "[E:tce* pan] likes [A:tce* man]."
jveo:
  family: "R"
  gloss: "friend"
  tags: [emotion]
  short: "[E:tce* pan] is a friend of [A:tce* pan]."
kli:
  family: "R"
  gloss: "thanks"
  tags: [emotion]
  short: "[E:tce* pan] thanks/is thankful to [A:tce* man] about [O:()] being true."
kre:
  family: "R"
  gloss: "helps"
  short: |
    [E:tce pan] helps [A:tce ma] to satisfy property [O:(tce ma)].  
    [A] is the one satisfying [O], and [E] doesn't need to satisfy [O].
vahul:
  family: "R"
  gloss: "milk"
  short: "[E:tce* pan] is milk."
mian:
  family: "R"
  gloss: "cat"
  tags: [animal]
  short: "[E:tce* pan] is a cat/felid/member of family Felidae."
gla:
  family: "R"
  gloss: "tool"
  short: "[E:tce* ma] [tool] is used to make [A:()] [purpose] true."
kali:
  family: "R"
  gloss: "drinks"
  short: "[E:tce* pan] drinks [E:tce* pan]."
buri:
  family: "R"
  gloss: "eats"
  short: "[E:tce* pan] eats [A:tce* pan]."
zin:
  family: "R"
  gloss: "woman"
  short: "[E:tce* pan] is a girl/woman/female (gender)."
zun:
  family: "R"
  gloss: "man"
  short: "[E:tce* pan] is a boy/man/male (gender)."
tsae:
  family: "R"
  gloss: "creates"
  short: "[E:tce pan] invents/creates/authors [A:tce* ma]."
zuna:
  family: "R"
  gloss: "inspired"
  short: "[E:tce* pan] is inspired by [A:tce* ma]. [A] is a source of inspiration for [A]."
zvia:
  family: "R"
  gloss: "purpose"
  short: "[E:tce pan] has goal/purpose/aims to satisfy [A:(tce pan)]."
skal:
  family: "R"
  gloss: "computer"
  short: "[E:tce* pan] is a computer."
sni:
  family: "R"
  gloss: "greets"
  short: "[E:tce* pan] (default: speaker) says hello to/greets [A:tce* pan] (default: listener)."
sne:
  family: "R"
  gloss: "goodbye"
  short: "[E:tce* pan] (default: speaker) says goodbye to [A:tce* pan] (default: listener)."
sna:
  family: "R"
  gloss: "welcomes"
  short: "[E:tce* pan] (default: speaker) welcomes [A:tce* pan] (default: listener) to place [O:tce* pan]."
spi:
  family: "R"
  gloss: "says"
  short: "[E:tce pan] says [A:tce* skan] to [O:tce* ma]."
spua:
  family: "R"
  gloss: "home"
  short: "[E:tce* pan] is a home/house/nest for [A:tce* pan]."
zaro:
  family: "R"
  gloss: "agrees"
  short: "[E:tce* pan] agrees with [A:tce* pan] that [O:()] is true."
vani:
  family: "R"
  gloss: "moves"
  short: "[E:tce* pan] moves/goes to [A:tce* pan] from [O:tce* pan]."
gza:
  family: "R"
  gloss: "agentive cause"
  short: "[E:tce* pan] is an agentive cause of [A:()] being true."
kini:
  family: "R"
  gloss: "learns"
  short: "[E:tce* pan] learns/studies fact [A:()]."
seru:
  family: "R"
  gloss: "about"
  short: "[E:tce* man] is about subject [A:tce* man]."
snai:
  family: "R"
  gloss: "works"
  short: "[E:tce pan] labors/works by satisfying property [A:(tce pan)]."
ber:
  family: "R"
  gloss: "eberbanic"
  short: "[E:tce* man] reflects this language (eberban)."
pre:
  family: "R"
  gloss: "person"
  short: "[E:tce* pan] is a person."
pra:
  family: "R"
  gloss: "loves"
  tags: [emotion]
  short: "[E:tce* pan] loves [A:tce* man]."
vire:
  family: "R"
  gloss: "visits"
  short: "[E:tce* pan] visits [E:tce* pan]."
peol:
  family: "R"
  gloss: "city"
  short: "[E:tce* pan] is a town/city."
zdir:
  family: "R"
  short: |
    [E:tce man] is amusing/entertaining/fun according to [A:tce* pan] (default: speaker)
    in property [O:(tce man)].
  gloss: "amusing"
fir:
  family: "R"
  gloss: "color"
  tags: [color]
  short: "[E:tce* man] is a color."
firu:
  family: "R"
  gloss: "color"
  tags: [color]
  short: "[E:tce* fir] is a color of [A:tce pan]."
sare:
  family: "R"
  gloss: "mutual"
  short: "[E:tco man] is a group where every pair of members mutualy satisfy relation [A:(tca man, tca man)]."
gli:
  family: "R"
  gloss: "happy"
  short: "[E:tce* pan] is happy about [A:()] being true."
siro:
  family: "R"
  gloss: "translation"
  short: "[E:tce* skar] (source) has translation [A:tce* skar] (result)."
tcuin:
  family: "R"
  short: "[E:tce* pan] is a tree."
  gloss: "tree"
jnaor:
  family: "R"
  gloss: "wild"
  short: "[E:tce* pan] is wild/untamed."
jine:
  family: "R"
  gloss: "want"
  short: "[E:tce* pan] desires/wants/wishes [A:()]."
fuher:
  family: "R"
  gloss: "fly"
  short: "[E:tce* pan] flies [in air/space]."
folin:
  family: "R"
  gloss: "airplane"
  short: "[E:tce* pan] is an airplane."
jleo:
  family: "R"
  gloss: "motivated"
  short: "[E:tce* pan] is motivated to make [A:()] true by [O:tce* man] (motivation)."
  notes: |
    TODO: Define what a motivation is. someone else? propositions?
zuan:
  family: "R"
  gloss: "walks"
  short: "[E:tce* pan] walks."
vune:
  family: "R"
  gloss: "enjoyable"
  short: "[E:tce* man] is enjoyable/great/nice for [A:tce* pan]."
jvin:
  family: "R"
  gloss: "dances"
  short: "[E:tce* pan] dances."
blan:
  family: "R"
  short: "[E:tce* man] is beautiful."
  gloss: "beautiful"
  notes: |
    TODO: According to which standard/observer ?
pcien:
  family: "R"
  gloss: "bread"
  short: "[E:tce* pan] is bread."
ban:
  family: "R"
  short: "[E:tce* man] is a language."
  gloss: "language"
banu:
  family: "R"
  short: "[E:tce* skar] is expressed in language [A:tce* ban]."
  gloss: "language"
vli:
  family: "R"
  short: "[E:tce* skar] is written/inscribed on display/storage medium [A:tce* pan]."
  gloss: "written"
soane:
  family: "R"
  gloss: "stolen"
  short: "[E:tce* pan] is stolen from [A:tce* pan]."
  notes: |
    Use with {gza} to express who/what steals (E-Xd).
tri:
  family: "R"
  gloss: "attemps"
  short: |
    [E:tce* pan] tries/attemps to do/bring about [A:()].
    Success is neither implied or disimplied.
tuli:
  family: "R"
  gloss: "needs"
  short: "[E:tce* man] requires/needs [A:()] to being true. [A] is a necessity for [E]."
miun:
  family: "R"
  gloss: "sleeps"
  short: "[E:tce* pan] sleeps."
juni:
  family: "R"
  gloss: "good"
  short: "[E:tce* man] is good."
  notes: |
    TODO: According to which standard/observer ?
junu:
  family: "R"
  gloss: "bad"
  short: "[E:tce* man] is bad."
  notes: |
    TODO: According to which standard/observer ?
kunu:
  family: "R"
  gloss: "feels"
  short: "[E:tce* pan] feels sentiment/emotion/sensation [A:tce* man]."
  notes: |
    TODO: Define sentiment/emotion/sensation.
viru:
  family: "R"
  gloss: "sees"
  short: "[E:tce* pan] sees [A:tce* pan]."
pure:
  family: "R"
  gloss: "hears"
  short: "[E:tce* pan] hears/listen to [A:tce* man]."
cen:
  family: "R"
  gloss: "word"
  short: "[E:tce* man] is a word."
  notes: |
    TODO: See {cei} notes.
vain:
  family: "R"
  gloss: "alive"
  short: "[E:tce* pan] is alive."
vaun:
  family: "R"
  gloss: "dead"
  short: "[E:tce* pan] is dead."
cfin:
  family: "R"
  gloss: "solid"
  tags: [matter]
  short: "[E:tce* pan] is a solid [state of matter]."
cfen:
  family: "R"
  gloss: "liquid"
  tags: [matter]
  short: "[E:tce* pan] is a liquid [state of matter]."
cfan:
  family: "R"
  gloss: "gas"
  tags: [matter]
  short: "[E:tce* pan] is a gas [state of matter]."
jeon:
  family: "R"
  gloss: "water"
  tags: [matter]
  short: "[E:tce* pan] is water."
gour:
  family: "R"
  gloss: "dog"
  tags: [animal]
  short: "[E:tce* pan] is a dog."
kanan:
  family: "R"
  gloss: "wolf"
  tags: [animal]
  short: "[E:tce* pan] is a wolf."
kroan:
  family: "R"
  gloss: "frog"
  tags: [animal]
  short: "[E:tce* pan] is a frog."
toril:
  family: "R"
  gloss: "bird"
  tags: [animal]
  short: "[E:tce* pan] is a bird."
cein:
  family: "R"
  gloss: "room"
  short: "[E:tce* pan] is a room."
caun:
  family: "R"
  gloss: "animal"
  tags: [animal]
  short: "[E:tce* pan] is an animal."
flur:
  family: "R"
  gloss: "plant"
  short: "[E:tce* pan] is a plant."
jveno:
  family: "R"
  gloss: "friendly"
  short: "[E:tce* pan] is kind/behaves friendly towards [A:tce* man]."
slari:
  family: "R"
  gloss: "rule"
  short: "[E:tce* man] is a rule/law prescribing/mandating/requiring [A:()]."
zire:
  family: "R"
  gloss: "respects"
  short: "[E:tce* pan] respects [A:tce* man]."
zbui:
  family: "R"
  gloss: "copulates"
  short: "[E:tce* pan] have sex/sexual intercourse/copulates/mates with [A:tce* pan]."
jiro:
  family: "R"
  gloss: "shares"
  short: "[E:tce* pan] shares [A:tce* man] with [O:tce* pan]."
sier:
  family: "R"
  gloss: "internet"
  short: "[E:tca man] is the Internet."
stini:
  family: "R"
  gloss: "rigid"
  short: "[E:tce* pan] is rigid/not bendable."
merue:
  family: "R"
  gloss: "organism"
  short: "[E:tce* pan] is an organism / form of life."
slane:
  family: "R"
  gloss: "tied"
  short: "[E:tce* pan] is tied/pinned to [A:tce* pan]."
skien:
  family: "R"
  gloss: "program"
  short: "[E:tce* man] is a computer program."
zari:
  family: "R"
  gloss: "recipe"
  short: "[E:tce* man] is a recipe, algorithm, procedure to achieve result [A:tce* man]."
zeni:
  family: "R"
  gloss: "provided"
  short: "[E:tce* pan] [supply/commodity] is provided to [A:tce* pan]."
  notes: |
    Use with {gza} to express who/what provides [E].
curo:
  family: "R"
  gloss: "grammar"
  short: "[E:tca man] is the grammar of [A:tca man]."
  notes: |
    TODO: See {cei} notes.
tsiu:
  family: "R"
  gloss: "finds"
  short: "[E:tce* pan] finds/discovers [A:tce* man]."
bun:
  family: "R"
  gloss: "text"
  short: "[A:tce* man] is a text."
bino:
  family: "R"
  gloss: "sick"
  short: "[E:tce* pan] is ill/sick from disease [A:tce* man]."
saul:
  family: "R"
  gloss: "light"
  short: "[E:tce* pan] is light [energy]."
cmiri:
  family: "R"
  gloss: "emits"
  short: "[E:tce* pan] emits/produce [A:tce* pan]."
cmiru:
  family: "R"
  gloss: "receives"
  short: "[E:tce* pan] receives/absorbs [A:tce* pan]."
flun:
  family: "R"
  gloss: "sound"
  short: "[A:tce* man] is a sound."
fana:
  family: "R"
  gloss: "social parent"
  tags: [kinship, family]
  short: "[E:tce* pan] is a social parent of [A:tce* pan] (child). [E] raises [A]."
vele:
  family: "R"
  gloss: "genetic parent"
  tags: [kinship, family]
  short: |
    [E:tce* pan] is a genetic direct parent of [A:tce* pan].
    [E] directly contributes to the genetic makeup of [A].
kana:
  family: "R"
  gloss: "sibling"
  tags: [kinship, family]
  short: "[E:tce* pan] is a sibling/brother/sister of [A:tce* pan]."
kene:
  family: "R"
  gloss: "nibling"
  tags: [kinship, family]
  short: "[E:tce* pan] is a nibling/nephew/nice of [A:tce* pan] (uncle/aunt)."
mana:
  family: "R"
  gloss: "mother"
  tags: [kinship, family]
  short: "[E:tce* pan] is a (social) mother of [A:tce* pan]."
  notes: Equivalent to {zin fana}.
pana:
  family: "R"
  gloss: "father"
  tags: [kinship, family]
  short: "[E:tce* pan] is a (social) father of [A:tce* pan]."
  notes: Equivalent to {zun fana}.
jnehu:
  family: "R"
  gloss: "takes care"
  tags: [kinship, family]
  short: |
    [E:tce* pan] takes cares of [A:tce* pan].
    [E] ensures that the needs of [A] are fulfulled.
dzana:
  family: "R"
  gloss: "married"
  tags: [kinship, family]
  short: "[E:tce* pan] is married to [A:tce* pan]."
kineo:
  family: "R"
  gloss: "touches"
  short: "[E:tce* pan] touches [A:tce* pan]."
varin:
  family: "R"
  gloss: "strange"
  short: "[E:tce* man] is strange/weird."
  notes: |
    TODO: According to who? Since it seems subjective, could it use a
    subjective "actor" in the context?
zvaor:
  family: "R"
  gloss: "accident"
  short: "[E:()] is an accident/unintentional."
teran:
  family: "R"
  gloss: "planet"
  short: "[E:tce* pan] is a planet."
soran:
  family: "R"
  gloss: "star"
  short: "[E:tce* pan] is a star."
zilan:
  family: "R"
  gloss: "moon"
  short: "[E:tce* pan] is a major natural satellite/moon."
kari:
  family: "R"
  gloss: "axiom"
  short: "[E:tce* pan] has axiomatic belief that [A:()] is true."
  notes: |
    [A] is an axiom, is presupposed to be true and it's truth value is never
    put into doupt.
meon:
  family: "R"
  gloss: "apple"
  short: "[E:tce* pan] is an apple."
  tags: [food]
kcaor:
  family: "R"
  gloss: "table"
  short: "[E:tce* pan] is a table."
stan:
  family: "R"
  gloss: "country"
  short: "[E:tce* pan] is a country/territory."
drair:
  family: "R"
  gloss: "god"
  short: "[E:tce* man] is a god."
kroin:
  family: "R"
  gloss: "leg"
  short: "[E:tce* pan] is a leg."
kani:
  family: "R"
  gloss: "infers from senses"
  short: "[E:tce* pan] infers from their current sensorial experience that [A:()] is the case."
mara:
  family: "R"
  gloss: "remembers"
  short: "[E:tce* pan] remembers the past experience of perceiving that [A:()] was the case."
zule:
  family: "R"
  gloss: "hearsay"
  short: "[E:tce* pan] has got second-hand information or hearsay according to which [A:()] is the case."
muni:
  family: "R"
  short: "[E:tce* pan] intuits that [A:()] is the case."
  gloss: "intuits"
sana:
  family: "R"
  gloss: "cultural knowledge"
  short: "[E:tce* pan] has cultural knowledge, collective wisdom according to which [A:()] is the case."
valo:
  family: "R"
  gloss: "infers from multiple sources"
  short: "[E:tce* pan] infers (from several sources of information) that [A:()] is the case."
bale:
  family: "R"
  gloss: "standing"
  short: "[E:tce* pan] is standing on [A:tce* pan]."
ctua:
  family: "R"
  gloss: "sit"
  short: "[E:tce* pan] is sitting on [A:tce* pan]."
proi:
  family: "R"
  gloss: "lying down"
  short: "[E:tce* pan] is lying down on [A:tce* pan]."
gavgin:
  family: "R"
  gloss: "crystal"
  short: "[E:tce* pan] is a crystal/gem/mineral with orderly atomic structure [A:tca man]."
jalan:
  family: "R"
  short: "[E:tce* pan] is awake."
  gloss: "awake"
celia:
  family: "R"
  gloss: "science"
  short: "[E:tca man] is the science/study/body of knowledge about topic [A:tce* man]."
  notes: |
    TODO: Define what a topic is.
filu:
  family: "R"
  gloss: "gives birth"
  short: "[E:tce* pan] gives birth to/begets [A:tce* pan]."
sahar:
  family: "R"
  gloss: "flower"
  short: "[E:tce* pan] is a flower."
kena:
  family: "R"
  gloss: "holds"
  short: "[E:tce* pan] holds/grasps [A:tce* pan]."
clo:
  family: "R"
  gloss: "purpose"
  short: "[E:tce man] have purpose to satisfy property [A:(tce man)]."
jara:
  family: "R"
  gloss: "paid work"
  short: "[E:tce pan] has satisfying property [A:(tce pan)] as one of their jobs/occupations (paid work)."
zera:
  family: "R"
  short: "[E:tce pan] has satisfying property [A:(tce pan)] as a personality trait."
  gloss: "personality trait"
blae:
  family: "R"
  gloss: "owned"
  short: "[E:tce* man] is owned by [E:tce pan]."
tsu:
  family: "R"
  gloss: "cardinality"
  short: "[E:tca gin] is the cardinality/number of elements of [A:tce a]."
dzui:
  family: "R"
  gloss: "able"
  short: "[E:tce pan] is able to satisfy property [A:(tce pan)]."

benal:
  family: "R"
  gloss: "healthy"
  short: "[E:tce* pan] is healthy/fit/well/in good health."
jogmal:
  family: "R"
  gloss: "wound"
  short: "[E:tce* pan] is a wound."
meul:
  family: "R"
  short: "[E:tce* pan] (default: water) is raining."
  gloss: "rain"
znir:
  family: "R"
  gloss: "obligated"
  short: |
    [E:()] is obligated to be performed under authority [A:tce* pan]. [E] is a duty.
    
    Examples: praying (in some religions), voting (in some countries), parents
    taking care of their children is societally obligated
zner:
  family: "R"
  gloss: "encouraged"
  short: |
    [E:()] is encouraged to be performed under authority [A:tce* pan]. 
    [E] is a virtuous/upstanding behavior.
    
    Examples: charity, volunteer work, being polite
znar:
  family: "R"
  gloss: "tolerated"
  short: |
    [E:()] is neither encouraged nor discouraged (i.e. permitted) by authority [A:tce* pan].
    [E] is tolerated.  
    
    Examples: basically most actions are {sena}, there are so many examples
    -- the act of breathing is sena
znor:
  family: "R"
  gloss: "discouraged"
  short: |
    [E:()] is discouraged to be performed under authority [A:tce* pan]; [E] is reprehensible.
    
    Examples: lying (not under oath), crimes with are technically illegal but
    not prosecuted, laughing at a funeral, breaking certain religious laws
znur:
  family: "R"
  gloss: "forbidden"
  short: |
    [E:()] is forbidden to be done by authority [A:tce* pan].
    
    Examples: for many religions speaking badly of their deity is forbidden,
    crimes which are prosecuted, cheating on your partner in a monogamous relationship
molai:
  family: "R"
  gloss: "reward/punishment"
  short: |
    [E:tce pan] is made to satisfy [A:(tce pan)] as a reward/punishment.  
    (E) is awarded/punished, with result that they satisfy [A].
krehu:
  family: "R"
  gloss: "meat"
  short: "[E:tce* pan] is meat from animal/source [A:tce* pan]."
drie:
  family: "R"
  gloss: "buys"
  short: "[E:tce pan] buys [A:tce pan] for price/in exchange for [O:tce pan] (where success is implied)."
dria:
  family: "R"
  gloss: "offers"
  short: "[E:tce pan] offers/intends to sell [A:tce pan] for price/in exchange for [O:tce pan] (where success is not implied)."
pubdel:
  family: "R"
  gloss: "soil"
  short: "[E:tce* pan] is soil/dirt/pebbles/silt/clay (soil of all types)."
baluor:
  family: "R"
  gloss: "stone"
  short: "[E:tce* pan] is a stone/rock/boulder (unified unbroken mass)."
boiur:
  family: "R"
  gloss: "dry land"
  short: "[E:tce* pan] is dry land (not watery, can be stepped on). [antonyms: {suier}, {gzeon}]"
suier:
  family: "R"
  gloss: "sea"
  short: "[E:tce* pan] is a sea/ocean/lake (relatively large non-flowing body of water)."
gzeon:
  family: "R"
  gloss: "river"
  short: "[E:tce* pan] is a river/stream/brook (relatively large flowing body of water)."
saelo:
  family: "R"
  gloss: "air"
  short: "[E:tce* pan] is air/breathable atmosphere/gas at correct pressure for [A:tce* pan] (default: {flan}/humans)."
soeon:
  family: "R"
  gloss: "sky"
  short: "[E:tce* pan] is is the sky (high troposphere and above)."
cnue:
  family: "R"
  short: "[E:tce* pan] is a piece/portion/part of [A:tce pan]."
  gloss: "portion"
duna:
  family: "R"
  short: "[E:tce pan] gives [A:tce* pan] to [O:tce pan]."
  gloss: "gives"
  notes: |
    [E] no longer has legal or incidental ownership over [A].
    Now, [O] has legal or incidental ownership over [A].
    To specify whether it's legal or incidental, use
    (TODO: Add words for legal/incidental ownership)

    [E] does not accept payment or expect reciprocation from [O].
skar:
  family: "R"
  short: "[E:tce* man] is a string of data (quote)."
  gloss: "quote"
flan:
  family: "R"
  short: "[E:tce* man] is a human being."
  gloss: "human"
fuli:
  family: "R"
  short: "[E:tce gen] is the sum of numbers in list [A:blu tce gen]."
  gloss: "sum"
koro:
  family: "R"
  short: |
    [E:(tce gen,tce gen)] is a predicate of the form: [E:tce gen] is [number]
    times [A:tce gen] (default: 1).
  gloss: "number pred"
  notes: |
    Allows to check a predicate behaves like a number made from TI (+ jie), or
    other number predicates of the same form. Can be used to define math
    equations with the unknown being such a predicate, allowing to chain multiple
    the unknown for multiplication.

    Example: {poi ga \[ge be\] fuli \[vi koro ge\] \[fa te bu, ta ge bu, to ge ge\] \[fe ti\]}\
    Question "ga": What is some number x such that 1 + 2x + 3x¬≤ = 0 ?

# -----
# Compounds
# -----
e tsae ban:
  family: "C2"
  gloss: "conlang"
  short: "[E:tce* ban] is a constructed language/conlang."
e ber ban:
  family: "C2"
  gloss: "eberban"
  tags: [cultural]
  short: "[E:tca ban] is the eberban language."
e ujbo ban:
  family: "C2"
  gloss: "lojban"
  tags: [cultural]
  short: "[E:tca ban] is the lojban language."
e ufranse ban:
  family: "C2"
  gloss: "french language"
  tags: [cultural]
  short: "[E:tca ban] is the french language."
e ufranse stan:
  family: "C2"
  gloss: "France"
  tags: [cultural]
  short: "[E:tca stan] is France."
e uinglici ban:
  family: "C2"
  gloss: "english language"
  tags: [cultural]
  short: "[E:tca ban] is the english language."
e unihon ban:
  family: "C2"
  gloss: "japanese language"
  tags: [cultural]
  short: "[E:tca ban] is the japanese language."
e unihon stan:
  family: "C2"
  gloss: "Japan"
  tags: [cultural]
  short: "[E:tca stan] is Japan."
e udjonguo ban:
  family: "C2"
  gloss: "chinese language"
  tags: [cultural]
  short: "[E:tca ban] is chinese language."
e udjonguo stan:
  family: "C2"
  gloss: "China"
  tags: [cultural]
  short: "[E:tca stan] is China."
e udoitce ban:
  family: "C2"
  gloss: "german language"
  tags: [cultural]
  short: "[E:tca ban] is german language."
e udoitce stan:
  family: "C2"
  gloss: "Germany"
  tags: [cultural]
  short: "[E:tca stan] is Germany."
e umiser stan:
  family: "C2"
  gloss: "Egypt"
  tags: [cultural]
  short: "[E:tca stan] is Egypt."
e uhangu ban:
  family: "C2"
  gloss: "south korean language"
  tags: [cultural]
  short: "[E:tca ban] is south korean language."
e uhangu stan:
  family: "C2"
  gloss: "South Korea"
  tags: [cultural]
  short: "[E:tca stan] is South Korea."
e utcoson ban:
  family: "C2"
  gloss: "north korean language"
  tags: [cultural]
  short: "[E:tca ban] is north korean language."
e utcoson stan:
  family: "C2"
  gloss: "North Korea"
  tags: [cultural]
  short: "[E:tca stan] is North Korea."
e kre vire:
  family: "C2"
  gloss: "guided visit"
  short: "[E:tce* pan] visits [A:tce* pan] with guide [O:tce* pan]."
e spi toril:
  family: "C2"
  gloss: "parrot"
  tags: [animal]
  short: "[E:tce* pan] is a parrot."
e pu zoi:
  family: "C2"
  gloss: "paragraph"
  short: "[E:tce* man] is a paragraph."
  notes: |
    TODO: See {cei} notes.
e bino cnue:
  family: "C2"
  gloss: "symptom"
  short: "[E:tce* man] [ill/sickness] is characterized by symptom [A:tce* man]."
e spua teran:
  family: "C2"
  gloss: "home planet"
  short: "[E:tca pan] is the home planet of species [A:tce* man] (default: {flan}/humans)."
e spua soran:
  family: "C2"
  gloss: "home star"
  short: "[E:tca pan] is the home star of species [A:tce* man] (default: {flan}/humans)."
e jveno kena:
  family: "C2"
  gloss: "hugs"
  short: "[E:tce* pan] hugs [A:tce* pan]."
e kini bun:
  family: "C2"
  short: "[E:tce* man] is a course teaching about subject [A:tce* man]."
  gloss: "course"
  definition: "po ekinibun ke ka pi ke bun gla kini via seru ka"

a cen po bu:
  family: "C3"
  gloss: "dictionary"
  short: "[E:tce* man] is a dictionary."